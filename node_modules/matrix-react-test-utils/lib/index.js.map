{"version":3,"sources":["../src/index.js"],"names":["_waitForRenderedComponent","attempts","findComponent","undefined","result","length","Promise","resolve","reject","Error","setTimeout","then","MatrixReactTestUtils","waitForRenderedDOMComponentWithTag","tree","tag","ReactTestUtils","scryRenderedDOMComponentsWithTag","waitForRenderedComponentWithType","componentType","scryRenderedComponentsWithType"],"mappings":";;;;;;AAAA;;;;;;AAEA;;;;;;;;;;;;;AAaA,SAASA,yBAAT,CAAmCC,QAAnC,EAA6CC,aAA7C,EAA4D;AACxD,QAAID,aAAaE,SAAjB,EAA4B;AACxB;AACAF,mBAAW,CAAX;AACH;;AAED,QAAMG,SAASF,eAAf;AACA,QAAIE,OAAOC,MAAP,GAAgB,CAApB,EAAuB;AACnB,eAAOC,QAAQC,OAAR,CAAgBH,OAAO,CAAP,CAAhB,CAAP;AACH;;AAEDH,eAAWA,WAAS,CAApB;;AAEA,QAAIA,YAAY,CAAhB,EAAmB;AACf,eAAOK,QAAQE,MAAR,CAAe,IAAIC,KAAJ,CAClB,+BADkB,CAAf,CAAP;AAGH;;AAED;AACA,WAAO,IAAIH,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCE,mBAAWH,OAAX,EAAoB,EAApB;AACH,KAFM,EAEJI,IAFI,CAEC,YAAM;AACV,eAAOX,0BAA0BC,QAA1B,EAAoCC,aAApC,CAAP;AACH,KAJM,CAAP;AAKH;;AAED,IAAMU,uBAAuB;AACzB;;;;;;;;;;AAUAC,wCAAoC,4CAASC,IAAT,EAAeC,GAAf,EAAoBd,QAApB,EAA8B;AAC9D,eAAOD,0BAA0BC,QAA1B,EAAoC,YAAM;AAC7C,mBAAOe,oBAAeC,gCAAf,CAAgDH,IAAhD,EAAsDC,GAAtD,CAAP;AACH,SAFM,CAAP;AAGH,KAfwB;;AAiBzB;;;;;;;;;;AAUAG,sCAAkC,0CAAUJ,IAAV,EAAgBK,aAAhB,EAA+BlB,QAA/B,EAAyC;AACvE,eAAOD,0BAA0BC,QAA1B,EAAoC,YAAM;AAC7C,mBAAOe,oBAAeI,8BAAf,CAA8CN,IAA9C,EAAoDK,aAApD,CAAP;AACH,SAFM,CAAP;AAGH;AA/BwB,CAA7B;;kBAkCeP,oB","file":"index.js","sourcesContent":["import ReactTestUtils from 'react-dom/test-utils';\n\n/**\n * Helper for waitForRendered(DOM)?Component*\n *\n * `findComponent` should be a callback which returns a list of components which\n * match the condition.\n *\n * @param {Number?} attempts\n * @param {Function} findComponent\n *\n * @return {Promise} a (native) promise that resolves once the component\n *     appears, or rejects if it doesn't appear after a nominal number of\n *     animation frames.\n */\nfunction _waitForRenderedComponent(attempts, findComponent) {\n    if (attempts === undefined) {\n        // make two attempts by default (one before waiting, and one after)\n        attempts = 2;\n    }\n\n    const result = findComponent();\n    if (result.length > 0) {\n        return Promise.resolve(result[0]);\n    }\n\n    attempts = attempts-1;\n\n    if (attempts == 0) {\n        return Promise.reject(new Error(\n            \"Gave up waiting for component\",\n        ));\n    }\n\n    // wait 10ms, then try again\n    return new Promise((resolve, reject) => {\n        setTimeout(resolve, 10);\n    }).then(() => {\n        return _waitForRenderedComponent(attempts, findComponent);\n    });\n}\n\nconst MatrixReactTestUtils = {\n    /**\n     * Waits a small number of animation frames for a component to appear\n     * in the DOM. Like findRenderedDOMComponentWithTag(), but allows\n     * for the element to appear a short time later, eg. if a promise needs\n     * to resolve first.\n     *\n     * @return {Promise<ReactDOMComponent>} a (native) promise that resolves once\n     *     the component appears, or rejects if it doesn't appear after a\n     *     nominal number of animation frames.\n     */\n    waitForRenderedDOMComponentWithTag: function(tree, tag, attempts) {\n        return _waitForRenderedComponent(attempts, () => {\n            return ReactTestUtils.scryRenderedDOMComponentsWithTag(tree, tag);\n        });\n    },\n\n    /**\n     * Waits a small number of animation frames for a component to appear\n     * in the DOM. Like findRenderedComponentWithType(), but allows\n     * for the element to appear a short time later, eg. if a promise needs\n     * to resolve first.\n     *\n     * @return {Promise<ReactComponent>} a (native) promise that resolves once\n     *     the component appears, or rejects if it doesn't appear after a\n     *     nominal number of animation frames.\n     */\n    waitForRenderedComponentWithType: function (tree, componentType, attempts) {\n        return _waitForRenderedComponent(attempts, () => {\n            return ReactTestUtils.scryRenderedComponentsWithType(tree, componentType);\n        });\n    },\n};\n\nexport default MatrixReactTestUtils;\n"]}