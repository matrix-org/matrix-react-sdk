{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "src/webcrypto.ts"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "/*\nCopyright 2021-2022 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { IEncryptedFile, IEncryptedFileJWK } from '.';\n\nexport async function encryptAttachment(plaintextBuffer: ArrayBuffer): Promise<{\n    data: ArrayBuffer;\n    info: IEncryptedFile;\n}> {\n    // Generate an IV where the first 8 bytes are random and the high 8 bytes\n    // are zero. We set the counter low bits to 0 since it makes it unlikely\n    // that the 64 bit counter will overflow.\n    const ivArray = new Uint8Array(16); // Uint8Array of AES IV\n    window.crypto.getRandomValues(ivArray.subarray(0, 8));\n    // Load the encryption key.\n    const cryptoKey = await window.crypto.subtle.generateKey(\n        { 'name': 'AES-CTR', 'length': 256 }, true, ['encrypt', 'decrypt'],\n    );\n    // Export the Key as JWK.\n    const exportedKey = await window.crypto.subtle.exportKey('jwk', cryptoKey);\n    // Encrypt the input ArrayBuffer.\n    // Use half of the iv as the counter by setting the \"length\" to 64.\n    const ciphertextBuffer = await window.crypto.subtle.encrypt(\n        { name: 'AES-CTR', counter: ivArray, length: 64 }, cryptoKey, plaintextBuffer,\n    );\n    // SHA-256 the encrypted data.\n    const sha256Buffer = await window.crypto.subtle.digest('SHA-256', ciphertextBuffer);\n    return {\n        data: ciphertextBuffer,\n        info: {\n            v: 'v2',\n            key: exportedKey as IEncryptedFileJWK,\n            iv: encodeBase64(ivArray),\n            hashes: {\n                sha256: encodeBase64(new Uint8Array(sha256Buffer)),\n            },\n        },\n    };\n}\n\nexport async function decryptAttachment(ciphertextBuffer: ArrayBuffer, info: IEncryptedFile): Promise<ArrayBuffer> {\n    if (info === undefined || info.key === undefined || info.iv === undefined\n        || info.hashes === undefined || info.hashes.sha256 === undefined) {\n        throw new Error('Invalid info. Missing info.key, info.iv or info.hashes.sha256 key');\n    }\n\n    if (info.v && !info.v.match(/^v[1-2]$/)) {\n        throw new Error(`Unsupported protocol version: ${info.v}`);\n    }\n\n    const ivArray = decodeBase64(info.iv);\n    const expectedSha256base64 = info.hashes.sha256;\n    // Load the AES from the \"key\" key of the inf bao object.\n    const cryptoKey = await window.crypto.subtle.importKey(\n        'jwk', info.key, { 'name': 'AES-CTR' }, false, ['encrypt', 'decrypt'],\n    );\n    const digestResult = await window.crypto.subtle.digest('SHA-256', ciphertextBuffer);\n    if (encodeBase64(new Uint8Array(digestResult)) != expectedSha256base64) {\n        throw new Error('Mismatched SHA-256 digest');\n    }\n    let counterLength: number;\n    if (info.v == 'v1' || info.v == 'v2') {\n        // Version 1 and 2 use a 64 bit counter.\n        counterLength = 64;\n    } else {\n        // Version 0 uses a 128 bit counter.\n        counterLength = 128;\n    }\n    return window.crypto.subtle.decrypt(\n        { name: 'AES-CTR', counter: ivArray, length: counterLength }, cryptoKey, ciphertextBuffer,\n    );\n}\n\nexport function encodeBase64(uint8Array: Uint8Array): string {\n    // Misinterpt the Uint8Array as Latin-1.\n    // window.btoa expects a unicode string with codepoints in the range 0-255.\n    const latin1String = String.fromCharCode.apply(null, uint8Array);\n    // Use the builtin base64 encoder.\n    const paddedBase64 = window.btoa(latin1String);\n    // Calculate the unpadded length.\n    const inputLength = uint8Array.length;\n    const outputLength = 4 * Math.floor((inputLength + 2) / 3) + (inputLength + 2) % 3 - 2;\n    // Return the unpadded base64.\n    return paddedBase64.slice(0, outputLength);\n}\n\nexport function decodeBase64(base64: string): Uint8Array {\n    // Pad the base64 up to the next multiple of 4.\n    const paddedBase64 = base64 + '==='.slice(0, (4 - base64.length % 4) % 4);\n    // Decode the base64 as a misinterpreted Latin-1 string.\n    // window.atob returns a unicode string with codepoints in the range 0-255.\n    const latin1String = window.atob(paddedBase64);\n    // Encode the string as a Uint8Array as Latin-1.\n    const uint8Array = new Uint8Array(latin1String.length);\n    for (let i = 0; i < latin1String.length; i++) {\n        uint8Array[i] = latin1String.charCodeAt(i);\n    }\n    return uint8Array;\n}\n\nexport default {\n    encryptAttachment,\n    decryptAttachment,\n    encodeBase64,\n    decodeBase64,\n};\n"
  ]
}