{"version":3,"sources":["../src/createMountWrapper.jsx"],"names":["stringOrFunction","PropTypes","oneOfType","func","string","makeValidElementType","adapter","validElementTypeRequired","props","propName","isValidElementType","args","isRequired","propValue","TypeError","validElementType","createMountWrapper","node","options","WrappingComponent","wrappingComponent","WrapperComponent","wrappingComponentProps","context","state","mount","newProps","newContext","callback","undefined","oldProps","oldContext","setState","Component","refProp","component","React","propTypes","object","shape","current","any","defaultProps","type","contextTypes","childContextTypes","prototype","getChildContext"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport RootFinder from './RootFinder';\n\nconst stringOrFunction = PropTypes.oneOfType([PropTypes.func, PropTypes.string]);\nconst makeValidElementType = (adapter) => {\n  if (!adapter) {\n    return stringOrFunction;\n  }\n\n  function validElementTypeRequired(props, propName, ...args) {\n    if (!adapter.isValidElementType) {\n      return stringOrFunction.isRequired(props, propName, ...args);\n    }\n    const propValue = props[propName];\n    if (adapter.isValidElementType(propValue)) {\n      return null;\n    }\n    return new TypeError(`${propName} must be a valid element type!`);\n  }\n\n  function validElementType(props, propName, ...args) {\n    const propValue = props[propName];\n    if (propValue == null) {\n      return null;\n    }\n    return validElementTypeRequired(props, propName, ...args);\n  }\n  validElementType.isRequired = validElementTypeRequired;\n\n  return validElementType;\n};\n\n/**\n * This is a utility component to wrap around the nodes we are\n * passing in to `mount()`. Theoretically, you could do everything\n * we are doing without this, but this makes it easier since\n * `renderIntoDocument()` doesn't really pass back a reference to\n * the DOM node it rendered to, so we can't really \"re-render\" to\n * pass new props in.\n */\nexport default function createMountWrapper(node, options = {}) {\n  const { adapter, wrappingComponent: WrappingComponent } = options;\n\n  class WrapperComponent extends React.Component {\n    constructor(...args) {\n      super(...args);\n      const { props, wrappingComponentProps, context } = this.props;\n      this.state = {\n        mount: true,\n        props,\n        wrappingComponentProps,\n        context,\n      };\n    }\n\n    setChildProps(newProps, newContext, callback = undefined) {\n      const { props: oldProps, context: oldContext } = this.state;\n      const props = { ...oldProps, ...newProps };\n      const context = { ...oldContext, ...newContext };\n      this.setState({ props, context }, callback);\n    }\n\n    setWrappingComponentProps(props, callback = undefined) {\n      this.setState({ wrappingComponentProps: props }, callback);\n    }\n\n    render() {\n      const { Component, refProp } = this.props;\n      const { mount, props, wrappingComponentProps } = this.state;\n      if (!mount) return null;\n      const component = <Component ref={refProp} {...props} />;\n      if (WrappingComponent) {\n        return (\n          <WrappingComponent {...wrappingComponentProps}>\n            <RootFinder>{component}</RootFinder>\n          </WrappingComponent>\n        );\n      }\n      return component;\n    }\n  }\n  WrapperComponent.propTypes = {\n    Component: makeValidElementType(adapter).isRequired,\n    context: PropTypes.object,\n    props: PropTypes.object.isRequired,\n    refProp: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n      PropTypes.shape({\n        current: PropTypes.any,\n      }),\n    ]),\n    wrappingComponentProps: PropTypes.object,\n  };\n  WrapperComponent.defaultProps = {\n    refProp: null,\n    context: null,\n    wrappingComponentProps: null,\n  };\n\n  if (options.context && (node.type.contextTypes || options.childContextTypes)) {\n    // For full rendering, we are using this wrapper component to provide context if it is\n    // specified in both the options AND the child component defines `contextTypes` statically\n    // OR the merged context types for all children (the node component or deeper children) are\n    // specified in options parameter under childContextTypes.\n    // In that case, we define both a `getChildContext()` function and a `childContextTypes` prop.\n    const childContextTypes = {\n      ...node.type.contextTypes,\n      ...options.childContextTypes,\n    };\n\n    WrapperComponent.prototype.getChildContext = function getChildContext() {\n      return this.state.context;\n    };\n    WrapperComponent.childContextTypes = childContextTypes;\n  }\n  return WrapperComponent;\n}\n"],"file":"createMountWrapper.js"}