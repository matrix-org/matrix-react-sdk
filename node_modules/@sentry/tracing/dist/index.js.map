{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/index.ts"],"names":[],"mappings":";AAAA,iDAAsD;AAuC7C,8BAvCA,mCAAmB,CAuCA;AAtC5B,6CAA+C;AAEtC,oCAAY;AAErB,kGAAkG;AAClG,kGAAkG;AAClG,QAAQ;AACR,EAAE;AACF,mEAAmE;AACnE,EAAE;AACF,kDAAkD;AAClD,sDAAsD;AACtD,EAAE;AACF,2FAA2F;AAC3F,iFAAiF;AACjF,EAAE;AACF,oDAAoD;AACpD,yCAAyC;AACzC,EAAE;AACF,2FAA2F;AAC3F,qCAA2C;AAAlC,mCAAA,cAAc,CAAA;AAEvB,+BAAsE;AAA7D,sBAAA,IAAI,CAAA;AAAkB,wCAAA,sBAAsB,CAAA;AACrD,mDAAmD;AACnD,2CAA0C;AAAjC,kCAAA,UAAU,CAAA;AACnB,6CAA4C;AAAnC,oCAAA,WAAW,CAAA;AACpB,qCAKmB;AAJjB,gCAAgC;AAChC,mDAAA,0BAA0B,CAAkC;AAE5D,yDAAA,oCAAoC,CAAA;AAEtC,qDAAoD;AAA3C,4CAAA,eAAe,CAAA;AACxB,iDAAuD;AAA9C,+CAAA,oBAAoB,CAAA;AAE7B,mEAAmE;AACnE,mCAAmB,EAAE,CAAC;AAItB,iCAMiB;AALf,yCAAA,sBAAsB,CAAA;AACtB,uCAAA,oBAAoB,CAAA;AACpB,oCAAA,iBAAiB,CAAA;AACjB,2CAAA,wBAAwB,CAAA;AACxB,qCAAA,kBAAkB,CAAA","sourcesContent":["import { addExtensionMethods } from './hubextensions';\nimport * as Integrations from './integrations';\n\nexport { Integrations };\n\n// This is already exported as part of `Integrations` above (and for the moment will remain so for\n// backwards compatibility), but that interferes with treeshaking, so we also export it separately\n// here.\n//\n// Previously we expected users to import tracing integrations like\n//\n// import { Integrations } from '@sentry/tracing';\n// const instance = new Integrations.BrowserTracing();\n//\n// This makes the integrations unable to be treeshaken though. To address this, we now have\n// this individual export. We now expect users to consume BrowserTracing like so:\n//\n// import { BrowserTracing } from '@sentry/tracing';\n// const instance = new BrowserTracing();\n//\n// For an example of of the new usage of BrowserTracing, see @sentry/nextjs index.client.ts\nexport { BrowserTracing } from './browser';\n\nexport { Span, SpanStatusType, spanStatusfromHttpCode } from './span';\n// eslint-disable-next-line deprecation/deprecation\nexport { SpanStatus } from './spanstatus';\nexport { Transaction } from './transaction';\nexport {\n  // TODO deprecate old name in v7\n  instrumentOutgoingRequests as registerRequestInstrumentation,\n  RequestInstrumentationOptions,\n  defaultRequestInstrumentationOptions,\n} from './browser';\nexport { IdleTransaction } from './idletransaction';\nexport { startIdleTransaction } from './hubextensions';\n\n// We are patching the global object with our hub extension methods\naddExtensionMethods();\n\nexport { addExtensionMethods };\n\nexport {\n  extractTraceparentData,\n  getActiveTransaction,\n  hasTracingEnabled,\n  stripUrlQueryAndFragment,\n  TRACEPARENT_REGEXP,\n} from './utils';\n"]}