{"version":3,"file":"metrics.js","sourceRoot":"","sources":["../../../../src/browser/metrics.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable max-lines */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Measurements, SpanContext } from '@sentry/types';\nimport { browserPerformanceTimeOrigin, getGlobalObject, htmlTreeAsString, isNodeEnv, logger } from '@sentry/utils';\n\nimport { IS_DEBUG_BUILD } from '../flags';\nimport { Span } from '../span';\nimport { Transaction } from '../transaction';\nimport { msToSec } from '../utils';\nimport { getCLS, LayoutShift } from './web-vitals/getCLS';\nimport { getFID } from './web-vitals/getFID';\nimport { getLCP, LargestContentfulPaint } from './web-vitals/getLCP';\nimport { getVisibilityWatcher } from './web-vitals/lib/getVisibilityWatcher';\nimport { NavigatorDeviceMemory, NavigatorNetworkInformation } from './web-vitals/types';\n\nconst global = getGlobalObject<Window>();\n\n/** Class tracking metrics  */\nexport class MetricsInstrumentation {\n  private _measurements: Measurements = {};\n\n  private _performanceCursor: number = 0;\n  private _lcpEntry: LargestContentfulPaint | undefined;\n  private _clsEntry: LayoutShift | undefined;\n\n  public constructor(private _reportAllChanges: boolean = false) {\n    if (!isNodeEnv() && global && global.performance && global.document) {\n      if (global.performance.mark) {\n        global.performance.mark('sentry-tracing-init');\n      }\n\n      this._trackCLS();\n      this._trackLCP();\n      this._trackFID();\n    }\n  }\n\n  /** Add performance related spans to a transaction */\n  public addPerformanceEntries(transaction: Transaction): void {\n    if (!global || !global.performance || !global.performance.getEntries || !browserPerformanceTimeOrigin) {\n      // Gatekeeper if performance API not available\n      return;\n    }\n\n    IS_DEBUG_BUILD && logger.log('[Tracing] Adding & adjusting spans using Performance API');\n\n    const timeOrigin = msToSec(browserPerformanceTimeOrigin);\n\n    let responseStartTimestamp: number | undefined;\n    let requestStartTimestamp: number | undefined;\n\n    global.performance\n      .getEntries()\n      .slice(this._performanceCursor)\n      .forEach((entry: Record<string, any>) => {\n        const startTime = msToSec(entry.startTime as number);\n        const duration = msToSec(entry.duration as number);\n\n        if (transaction.op === 'navigation' && timeOrigin + startTime < transaction.startTimestamp) {\n          return;\n        }\n\n        switch (entry.entryType) {\n          case 'navigation': {\n            addNavigationSpans(transaction, entry, timeOrigin);\n            responseStartTimestamp = timeOrigin + msToSec(entry.responseStart as number);\n            requestStartTimestamp = timeOrigin + msToSec(entry.requestStart as number);\n            break;\n          }\n          case 'mark':\n          case 'paint':\n          case 'measure': {\n            const startTimestamp = addMeasureSpans(transaction, entry, startTime, duration, timeOrigin);\n            // capture web vitals\n\n            const firstHidden = getVisibilityWatcher();\n            // Only report if the page wasn't hidden prior to the web vital.\n            const shouldRecord = entry.startTime < firstHidden.firstHiddenTime;\n\n            if (entry.name === 'first-paint' && shouldRecord) {\n              IS_DEBUG_BUILD && logger.log('[Measurements] Adding FP');\n              this._measurements['fp'] = { value: entry.startTime };\n              this._measurements['mark.fp'] = { value: startTimestamp };\n            }\n\n            if (entry.name === 'first-contentful-paint' && shouldRecord) {\n              IS_DEBUG_BUILD && logger.log('[Measurements] Adding FCP');\n              this._measurements['fcp'] = { value: entry.startTime };\n              this._measurements['mark.fcp'] = { value: startTimestamp };\n            }\n\n            break;\n          }\n          case 'resource': {\n            const resourceName = (entry.name as string).replace(global.location.origin, '');\n            addResourceSpans(transaction, entry, resourceName, startTime, duration, timeOrigin);\n            break;\n          }\n          default:\n          // Ignore other entry types.\n        }\n      });\n\n    this._performanceCursor = Math.max(performance.getEntries().length - 1, 0);\n\n    this._trackNavigator(transaction);\n\n    // Measurements are only available for pageload transactions\n    if (transaction.op === 'pageload') {\n      // normalize applicable web vital values to be relative to transaction.startTimestamp\n\n      const timeOrigin = msToSec(browserPerformanceTimeOrigin);\n\n      // Generate TTFB (Time to First Byte), which measured as the time between the beginning of the transaction and the\n      // start of the response in milliseconds\n      if (typeof responseStartTimestamp === 'number') {\n        IS_DEBUG_BUILD && logger.log('[Measurements] Adding TTFB');\n        this._measurements['ttfb'] = { value: (responseStartTimestamp - transaction.startTimestamp) * 1000 };\n\n        if (typeof requestStartTimestamp === 'number' && requestStartTimestamp <= responseStartTimestamp) {\n          // Capture the time spent making the request and receiving the first byte of the response.\n          // This is the time between the start of the request and the start of the response in milliseconds.\n          this._measurements['ttfb.requestTime'] = { value: (responseStartTimestamp - requestStartTimestamp) * 1000 };\n        }\n      }\n\n      ['fcp', 'fp', 'lcp'].forEach(name => {\n        if (!this._measurements[name] || timeOrigin >= transaction.startTimestamp) {\n          return;\n        }\n\n        // The web vitals, fcp, fp, lcp, and ttfb, all measure relative to timeOrigin.\n        // Unfortunately, timeOrigin is not captured within the transaction span data, so these web vitals will need\n        // to be adjusted to be relative to transaction.startTimestamp.\n\n        const oldValue = this._measurements[name].value;\n        const measurementTimestamp = timeOrigin + msToSec(oldValue);\n        // normalizedValue should be in milliseconds\n        const normalizedValue = Math.abs((measurementTimestamp - transaction.startTimestamp) * 1000);\n\n        const delta = normalizedValue - oldValue;\n        IS_DEBUG_BUILD &&\n          logger.log(`[Measurements] Normalized ${name} from ${oldValue} to ${normalizedValue} (${delta})`);\n\n        this._measurements[name].value = normalizedValue;\n      });\n\n      if (this._measurements['mark.fid'] && this._measurements['fid']) {\n        // create span for FID\n\n        _startChild(transaction, {\n          description: 'first input delay',\n          endTimestamp: this._measurements['mark.fid'].value + msToSec(this._measurements['fid'].value),\n          op: 'web.vitals',\n          startTimestamp: this._measurements['mark.fid'].value,\n        });\n      }\n\n      // If FCP is not recorded we should not record the cls value\n      // according to the new definition of CLS.\n      if (!('fcp' in this._measurements)) {\n        delete this._measurements.cls;\n      }\n\n      transaction.setMeasurements(this._measurements);\n      tagMetricInfo(transaction, this._lcpEntry, this._clsEntry);\n      transaction.setTag('sentry_reportAllChanges', this._reportAllChanges);\n    }\n  }\n\n  /**\n   * Capture the information of the user agent.\n   */\n  private _trackNavigator(transaction: Transaction): void {\n    const navigator = global.navigator as null | (Navigator & NavigatorNetworkInformation & NavigatorDeviceMemory);\n    if (!navigator) {\n      return;\n    }\n\n    // track network connectivity\n    const connection = navigator.connection;\n    if (connection) {\n      if (connection.effectiveType) {\n        transaction.setTag('effectiveConnectionType', connection.effectiveType);\n      }\n\n      if (connection.type) {\n        transaction.setTag('connectionType', connection.type);\n      }\n\n      if (isMeasurementValue(connection.rtt)) {\n        this._measurements['connection.rtt'] = { value: connection.rtt as number };\n      }\n\n      if (isMeasurementValue(connection.downlink)) {\n        this._measurements['connection.downlink'] = { value: connection.downlink as number };\n      }\n    }\n\n    if (isMeasurementValue(navigator.deviceMemory)) {\n      transaction.setTag('deviceMemory', String(navigator.deviceMemory));\n    }\n\n    if (isMeasurementValue(navigator.hardwareConcurrency)) {\n      transaction.setTag('hardwareConcurrency', String(navigator.hardwareConcurrency));\n    }\n  }\n\n  /** Starts tracking the Cumulative Layout Shift on the current page. */\n  private _trackCLS(): void {\n    // See:\n    // https://web.dev/evolving-cls/\n    // https://web.dev/cls-web-tooling/\n    getCLS(metric => {\n      const entry = metric.entries.pop();\n      if (!entry) {\n        return;\n      }\n\n      IS_DEBUG_BUILD && logger.log('[Measurements] Adding CLS');\n      this._measurements['cls'] = { value: metric.value };\n      this._clsEntry = entry as LayoutShift;\n    });\n  }\n\n  /** Starts tracking the Largest Contentful Paint on the current page. */\n  private _trackLCP(): void {\n    getLCP(metric => {\n      const entry = metric.entries.pop();\n      if (!entry) {\n        return;\n      }\n\n      const timeOrigin = msToSec(browserPerformanceTimeOrigin as number);\n      const startTime = msToSec(entry.startTime);\n      IS_DEBUG_BUILD && logger.log('[Measurements] Adding LCP');\n      this._measurements['lcp'] = { value: metric.value };\n      this._measurements['mark.lcp'] = { value: timeOrigin + startTime };\n      this._lcpEntry = entry as LargestContentfulPaint;\n    }, this._reportAllChanges);\n  }\n\n  /** Starts tracking the First Input Delay on the current page. */\n  private _trackFID(): void {\n    getFID(metric => {\n      const entry = metric.entries.pop();\n      if (!entry) {\n        return;\n      }\n\n      const timeOrigin = msToSec(browserPerformanceTimeOrigin as number);\n      const startTime = msToSec(entry.startTime);\n      IS_DEBUG_BUILD && logger.log('[Measurements] Adding FID');\n      this._measurements['fid'] = { value: metric.value };\n      this._measurements['mark.fid'] = { value: timeOrigin + startTime };\n    });\n  }\n}\n\n/** Instrument navigation entries */\nfunction addNavigationSpans(transaction: Transaction, entry: Record<string, any>, timeOrigin: number): void {\n  ['unloadEvent', 'redirect', 'domContentLoadedEvent', 'loadEvent', 'connect'].forEach(event => {\n    addPerformanceNavigationTiming(transaction, entry, event, timeOrigin);\n  });\n  addPerformanceNavigationTiming(transaction, entry, 'secureConnection', timeOrigin, 'TLS/SSL', 'connectEnd');\n  addPerformanceNavigationTiming(transaction, entry, 'fetch', timeOrigin, 'cache', 'domainLookupStart');\n  addPerformanceNavigationTiming(transaction, entry, 'domainLookup', timeOrigin, 'DNS');\n  addRequest(transaction, entry, timeOrigin);\n}\n\n/** Create measure related spans */\nfunction addMeasureSpans(\n  transaction: Transaction,\n  entry: Record<string, any>,\n  startTime: number,\n  duration: number,\n  timeOrigin: number,\n): number {\n  const measureStartTimestamp = timeOrigin + startTime;\n  const measureEndTimestamp = measureStartTimestamp + duration;\n\n  _startChild(transaction, {\n    description: entry.name as string,\n    endTimestamp: measureEndTimestamp,\n    op: entry.entryType as string,\n    startTimestamp: measureStartTimestamp,\n  });\n\n  return measureStartTimestamp;\n}\n\nexport interface ResourceEntry extends Record<string, unknown> {\n  initiatorType?: string;\n  transferSize?: number;\n  encodedBodySize?: number;\n  decodedBodySize?: number;\n}\n\n/** Create resource-related spans */\nexport function addResourceSpans(\n  transaction: Transaction,\n  entry: ResourceEntry,\n  resourceName: string,\n  startTime: number,\n  duration: number,\n  timeOrigin: number,\n): void {\n  // we already instrument based on fetch and xhr, so we don't need to\n  // duplicate spans here.\n  if (entry.initiatorType === 'xmlhttprequest' || entry.initiatorType === 'fetch') {\n    return;\n  }\n\n  const data: Record<string, any> = {};\n  if ('transferSize' in entry) {\n    data['Transfer Size'] = entry.transferSize;\n  }\n  if ('encodedBodySize' in entry) {\n    data['Encoded Body Size'] = entry.encodedBodySize;\n  }\n  if ('decodedBodySize' in entry) {\n    data['Decoded Body Size'] = entry.decodedBodySize;\n  }\n\n  const startTimestamp = timeOrigin + startTime;\n  const endTimestamp = startTimestamp + duration;\n\n  _startChild(transaction, {\n    description: resourceName,\n    endTimestamp,\n    op: entry.initiatorType ? `resource.${entry.initiatorType}` : 'resource',\n    startTimestamp,\n    data,\n  });\n}\n\n/** Create performance navigation related spans */\nfunction addPerformanceNavigationTiming(\n  transaction: Transaction,\n  entry: Record<string, any>,\n  event: string,\n  timeOrigin: number,\n  description?: string,\n  eventEnd?: string,\n): void {\n  const end = eventEnd ? (entry[eventEnd] as number | undefined) : (entry[`${event}End`] as number | undefined);\n  const start = entry[`${event}Start`] as number | undefined;\n  if (!start || !end) {\n    return;\n  }\n  _startChild(transaction, {\n    op: 'browser',\n    description: description ?? event,\n    startTimestamp: timeOrigin + msToSec(start),\n    endTimestamp: timeOrigin + msToSec(end),\n  });\n}\n\n/** Create request and response related spans */\nfunction addRequest(transaction: Transaction, entry: Record<string, any>, timeOrigin: number): void {\n  _startChild(transaction, {\n    op: 'browser',\n    description: 'request',\n    startTimestamp: timeOrigin + msToSec(entry.requestStart as number),\n    endTimestamp: timeOrigin + msToSec(entry.responseEnd as number),\n  });\n\n  _startChild(transaction, {\n    op: 'browser',\n    description: 'response',\n    startTimestamp: timeOrigin + msToSec(entry.responseStart as number),\n    endTimestamp: timeOrigin + msToSec(entry.responseEnd as number),\n  });\n}\n\n/**\n * Helper function to start child on transactions. This function will make sure that the transaction will\n * use the start timestamp of the created child span if it is earlier than the transactions actual\n * start timestamp.\n */\nexport function _startChild(transaction: Transaction, { startTimestamp, ...ctx }: SpanContext): Span {\n  if (startTimestamp && transaction.startTimestamp > startTimestamp) {\n    transaction.startTimestamp = startTimestamp;\n  }\n\n  return transaction.startChild({\n    startTimestamp,\n    ...ctx,\n  });\n}\n\n/**\n * Checks if a given value is a valid measurement value.\n */\nfunction isMeasurementValue(value: any): boolean {\n  return typeof value === 'number' && isFinite(value);\n}\n\n/** Add LCP / CLS data to transaction to allow debugging */\nfunction tagMetricInfo(\n  transaction: Transaction,\n  lcpEntry: MetricsInstrumentation['_lcpEntry'],\n  clsEntry: MetricsInstrumentation['_clsEntry'],\n): void {\n  if (lcpEntry) {\n    IS_DEBUG_BUILD && logger.log('[Measurements] Adding LCP Data');\n\n    // Capture Properties of the LCP element that contributes to the LCP.\n\n    if (lcpEntry.element) {\n      transaction.setTag('lcp.element', htmlTreeAsString(lcpEntry.element));\n    }\n\n    if (lcpEntry.id) {\n      transaction.setTag('lcp.id', lcpEntry.id);\n    }\n\n    if (lcpEntry.url) {\n      // Trim URL to the first 200 characters.\n      transaction.setTag('lcp.url', lcpEntry.url.trim().slice(0, 200));\n    }\n\n    transaction.setTag('lcp.size', lcpEntry.size);\n  }\n\n  // See: https://developer.mozilla.org/en-US/docs/Web/API/LayoutShift\n  if (clsEntry && clsEntry.sources) {\n    IS_DEBUG_BUILD && logger.log('[Measurements] Adding CLS Data');\n    clsEntry.sources.forEach((source, index) =>\n      transaction.setTag(`cls.source.${index + 1}`, htmlTreeAsString(source.node)),\n    );\n  }\n}\n"]}