{"version":3,"file":"moo-color.js","mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;;;;;ACVY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvJuC;AAEvC;;;;;;;;GAQG;AACI,SAAS,QAAQ,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS;IACtD,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,GAAG,CAAC;IAC5B,IAAM,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACxC,IAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC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","sources":["webpack://MooColor/webpack/universalModuleDefinition","webpack://MooColor/./node_modules/color-name/index.js","webpack://MooColor/./src/color-converter.ts","webpack://MooColor/./src/color-formatter.ts","webpack://MooColor/./src/color-names.ts","webpack://MooColor/./src/color.ts","webpack://MooColor/./src/input-parser.ts","webpack://MooColor/./src/util/util.ts","webpack://MooColor/webpack/bootstrap","webpack://MooColor/webpack/runtime/compat get default export","webpack://MooColor/webpack/runtime/define property getters","webpack://MooColor/webpack/runtime/hasOwnProperty shorthand","webpack://MooColor/webpack/runtime/make namespace object","webpack://MooColor/./src/moo-color.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MooColor\"] = factory();\n\telse\n\t\troot[\"MooColor\"] = factory();\n})(this, () => {\nreturn ","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","import { padStart } from './util/util';\n\n/**\n * Converts an HSL to RGB.\n * @see https://www.rapidtables.com/convert/color/hsl-to-rgb.html\n * @export\n * @param {number} h hue\n * @param {number} s saturation 0-100\n * @param {number} l lightness 0-100\n * @returns {number[]} [red, green, blue] 0-255\n */\nexport function hslToRgb(h: number, s: number, l: number): number[] {\n  h /= 60, s /= 100, l /= 100;\n  const c = (1 - Math.abs(2 * l - 1)) * s;\n  const x = c * (1 - Math.abs(h % 2 - 1));\n  const m = l - c / 2;\n  let r;\n  let g;\n  let b;\n  switch (Math.floor(h)) {\n    case 0: r = c, g = x, b = 0; break;\n    case 1: r = x, g = c, b = 0; break;\n    case 2: r = 0, g = c, b = x; break;\n    case 3: r = 0, g = x, b = c; break;\n    case 4: r = x, g = 0, b = c; break;\n    case 5: r = c, g = 0, b = x; break;\n  }\n  return [r, g, b].map(val => (val + m) * 255);\n}\n\n/**\n * Converts RGB to HSL.\n * @see https://www.rapidtables.com/convert/color/rgb-to-hsl.html\n * @export\n * @param {number} r red 0-255\n * @param {number} g green 0-255\n * @param {number} b blue 0-255\n * @returns {number[]} [hue, saturation, lightness] (0-360, 0-100, 0-100)\n */\nexport function rgbToHsl(r: number, g: number, b: number): number[] {\n  r /= 255, g /= 255, b /= 255;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const delta = max - min;\n  let h;\n  if (delta === 0) {\n    h = 0;\n  } else if (max === r) {\n    h = 60 * ((g - b) / delta % 6);\n  } else if (max === g) {\n    h = 60 * ((b - r) / delta + 2);\n  } else {\n    h = 60 * ((r - g) / delta + 4);\n  }\n  const l = (max + min) / 2;\n  const s = delta === 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n  return [h, s * 100, l * 100];\n}\n\n/**\n * Converts HWB to RGB.\n * @export\n * @param {number} hue hue 0-360\n * @param {number} white whiteness 0-100\n * @param {number} black blackness 0-100\n * @returns {number[]} [red, green, blue] 0-255\n */\nexport function hwbToRgb(hue: number, white: number, black: number): number[] {\n  const [h, s, v] = hwbToHsv(hue, white, black);\n  return hsvToRgb(h, s, v);\n}\n\n/**\n * Converts RGB to HWB.\n * @export\n * @param {number} r red 0-255\n * @param {number} g green 0-255\n * @param {number} b blue 0-255\n * @returns {number[]} [hue, whiteness, blackness] (0-360, 0-100, 0-100)\n */\nexport function rgbToHwb(r: number, g: number, b: number): number[] {\n  const [h, s, v] = rgbToHsv(r, g, b);\n  return hsvToHwb(h, s, v);\n}\n\n/**\n * Converts CMYK to RGB.\n * @see https://www.rapidtables.com/convert/color/cmyk-to-rgb.html\n * @export\n * @param {number} c cyan 0-100\n * @param {number} m magenta 0-100\n * @param {number} y yellow 0-100\n * @param {number} k black 0-100\n * @returns {number[]} [red, green, blue] 0-255\n */\nexport function cmykToRgb(c: number, m: number, y: number, k: number): number[] {\n  c /= 100, m /= 100, y /= 100, k /= 100;\n  const red = 255 * (1 - c) * (1 - k);\n  const green = 255 * (1 - m) * (1 - k);\n  const blue = 255 * (1 - y) * (1 - k);\n  return [red, green, blue];\n}\n\n/**\n * Converts RGB to CMYK\n * @see https://www.rapidtables.com/convert/color/rgb-to-cmyk.html\n * @export\n * @param {number} r red 0-255\n * @param {number} g green 0-255\n * @param {number} b blue 0-255\n * @returns {number[]} [cyan, magenta, yellow, black] 0-100\n */\nexport function rgbToCmyk(r: number, g: number, b: number): number[] {\n  r /= 255, g /= 255, b /= 255;\n  const k = 1 - Math.max(r, g, b);\n  const c = (1 - r - k) / (1 - k);\n  const m = (1 - g - k) / (1 - k);\n  const y = (1 - b - k) / (1 - k);\n  return [c, m, y, k].map(x => x * 100);\n}\n\n/**\n * Converts HSV to RGB.\n * @see https://www.rapidtables.com/convert/color/hsv-to-rgb.html\n * @export\n * @param {number} h hue 0-360\n * @param {number} s saturation 0-100\n * @param {number} v value 0-100\n * @returns {number[]} [red, green, blue] 0-255\n */\nexport function hsvToRgb(h: number, s: number, v: number): number[] {\n  s /= 100; v /= 100;\n  let r;\n  let g;\n  let b;\n  const i = h / 60;\n  const c = v * s;\n  const x = c * (1 - Math.abs(i % 2 - 1));\n  const m = v - c;\n  switch (Math.floor(i)) {\n    case 0: r = c, g = x, b = 0; break;\n    case 1: r = x, g = c, b = 0; break;\n    case 2: r = 0, g = c, b = x; break;\n    case 3: r = 0, g = x, b = c; break;\n    case 4: r = x, g = 0, b = c; break;\n    case 5: r = c, g = 0, b = x; break;\n  }\n  return [r, g, b].map(val => (val + m) * 255);\n}\n\n/**\n * Converts RGB to HSV.\n * @see https://www.rapidtables.com/convert/color/rgb-to-hsv.html\n * @export\n * @param {number} r red 0-255\n * @param {number} g green 0-255\n * @param {number} b blue 0-255\n * @returns {number[]} [hue, saturation, value] (0-360, 0-100, 0-100)\n */\nexport function rgbToHsv(r: number, g: number, b: number): number[] {\n  r /= 255, g /= 255, b /= 255;\n  let h;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const delta = max - min;\n  if (delta === 0) {\n    h = 0;\n  } else if (max === r) {\n    h = 60 * ((g - b) / delta % 6);\n  } else if (max === g) {\n    h = 60 * ((b - r) / delta + 2);\n  } else {\n    h = 60 * ((r - g) / delta + 4);\n  }\n  const s = max === 0 ? 0 : delta / max;\n  const v = max;\n  return [h, s * 100, v * 100];\n}\n\n/**\n * Converts HSV to HWB\n * @see https://en.wikipedia.org/wiki/HWB_color_model\n * @export\n * @param {number} h hue 0-360\n * @param {number} s saturation 0-100\n * @param {number} v value 0-100\n * @returns {number[]} [hue, whiteness, blackness] (0-360, 0-100, 0-100)\n */\nexport function hsvToHwb(h: number, s: number, v: number): number[] {\n  s /= 100, v /= 100;\n  const white = (1 - s) * v;\n  const black = 1 - v;\n  return [h, white * 100, black * 100];\n}\n\n/**\n * Converts HWB to HSV.\n * @see https://en.wikipedia.org/wiki/HWB_color_model\n * @export\n * @param {number} h hue 0-360\n * @param {number} w whiteness 0-100\n * @param {number} b blackness 0-100\n * @returns {number[]} [hue, saturation, value] (0-360, 0-100, 0-100)\n */\nexport function hwbToHsv(h: number, w: number, b: number): number[] {\n  [h, w, b] = resolveHwb(h, w, b);\n  w /= 100, b /= 100;\n  const s = 1 - w / (1 - b);\n  const v = 1 - b;\n  return [h, s * 100, v * 100];\n}\n\n/**\n * Converts RGB to HEX string.\n * @export\n * @param {number} r red 0-255\n * @param {number} g green 0-255\n * @param {number} b blue 0-255\n * @param {(number|null)} [a] alpha 0-1 or null\n * @param {boolean} [enableShort] enable shorthand, default is false.\n * @returns {string} Hex string. e.g. 'ff0000'\n */\nexport function rgbToHex(r: number, g: number, b: number, a?: number|null, enableShort?: boolean): string {\n  const arr = [r, g, b];\n  if (typeof a === 'number') {\n    arr.push(Math.round(a * 255));\n  }\n  const hex = arr.map(x => padStart(x.toString(16), 2, '0')).join('');\n  return enableShort ? hexToShorthand(hex) : hex;\n}\n\nfunction hexToShorthand(hex: string): string {\n  let check = true;\n  const rgb = hex.match(/.{2}/g);\n  rgb.forEach(x => {\n    if (!x.match(/(.)\\1+/)) {\n      check = false;\n    }\n  });\n  return check ? rgb.map(x => x.substring(1)).join('') : hex;\n}\n\n/**\n * Converts HEX string to RGB.\n * @export\n * @param {string} hex hex string. e.g. 'ff0000', 'f00', 'ff000080'\n * @returns {number[]} [red, green, blue, alpha?] (rgb: 0-255, alpha: 0-1)\n */\nexport function hexToRgb(hex: string): number[] {\n  const short = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i;\n  return hex.replace(short, (m, r, g, b, a) => {\n    a = typeof a === 'undefined' ? '' : a;\n    return r + r + g + g + b + b + a + a;\n  })\n  .match(/.{2}/g)\n  .map((x, i) => i !== 3 ? parseInt(x, 16) : parseInt(x, 16) / 255);\n}\n\n/**\n * Resolve HWB values.\n * @see https://drafts.csswg.org/css-color/#the-hwb-notation\n * @export\n * @param {number} h hue 0-360\n * @param {number} w whiteness 0-100\n * @param {number} b blackness 0-100\n * @returns {number[]} [hue, whiteness, blackness]\n */\nexport function resolveHwb(h: number, w: number, b: number): number[] {\n  const total = w + b;\n  if (total > 100) {\n    w = Number((w / total).toFixed(4)) * 100;\n    b = Number((b / total).toFixed(4)) * 100;\n  }\n  return [h, w, b];\n}\n","import {\n  AcceptedModel,\n  Color,\n  ColorRepresentable,\n  ColorSettable,\n  HexMode,\n  RgbMode,\n} from './color';\nimport * as Converter from './color-converter';\nimport Names from './color-names';\nimport { arrayIsEqual, decimal, resolveAlpha } from './util/util';\n\nexport class ColorFormatter implements ColorSettable, ColorRepresentable {\n  color?: Color;\n  // In hwb model, whiteness and blackness value's adjust will required.\n  protected resolveHwb = Converter.resolveHwb;\n\n  setColor(color: Color): this {\n    color.alpha = resolveAlpha(color.alpha);\n    this.color = color;\n    return this;\n  }\n\n  getColor(): Color {\n    return this.color;\n  }\n\n  getColorAs(model: AcceptedModel): Color {\n    return this.color.model === model\n      ? this.color\n      : this.convert(this.color, model);\n  }\n\n  getModel(): AcceptedModel|undefined {\n    return this.color ? this.color.model : undefined;\n  }\n\n  changeModel(model: AcceptedModel): this {\n    return this.color.model === model\n      ? this\n      : this.setColor(this.convert(this.color, model));\n  }\n\n  getAlpha(): number {\n    return this.color.alpha;\n  }\n\n  setAlpha(alpha: number): this {\n    this.color.alpha = alpha;\n    return this;\n  }\n\n  convert(color: Color, model: AcceptedModel): Color {\n    let values: number[];\n    switch (color.model) {\n      case 'rgb': values = this.convertFromRgb(color.values, model); break;\n      case 'hwb': values = this.convertFromHwb(color.values, model); break;\n      case 'hsl': values = this.convertFromHsl(color.values, model); break;\n      case 'hsv': values = this.convertFromHsv(color.values, model); break;\n      case 'cmyk': values = this.convertFromCmyk(color.values, model); break;\n    }\n    if (!values.length) {\n      throw new Error('Converting Error!');\n    }\n    return { model, values, alpha: color.alpha};\n  }\n\n  /**\n   * Represents color as notation of specific color model.\n   *\n   * @param {(AcceptedModel|'hex')} [model] - Specify color model.\n   * If not specifying this value, then returns current color model.\n   * @param {...any[]} args - Arguments for the represent methods.\n   * @returns {string}\n   */\n  toString(model?: AcceptedModel|'hex', ...args: any[]): string {\n    model = model ? model : this.color.model;\n    switch (model) {\n      case 'hex': return this.toHex(...args);\n      case 'hwb': return this.toHwb();\n      case 'hsl': return this.toHsl();\n      case 'hsv': return this.toHsv();\n      case 'cmyk': return this.toCmyk();\n      default: return this.toRgb(...args);\n    }\n  }\n\n  /**\n   * Represents color as HEX notation.\n   * @see https://www.w3.org/TR/css-color-4/#hex-notation\n   *\n   * @param {HexMode} [mode='full'] 'full'|'short'|'name'\n   * @returns {string}\n   */\n  toHex(mode: HexMode = 'full'): string {\n    const color = this.getColorAs('rgb');\n    const [r, g, b] = color.values.map(x => Math.round(x));\n    const a = color.alpha === 1 ? null : color.alpha;\n    const nameOrShort = () => {\n      let name = '';\n      for (const key of Object.keys(Names)) {\n        if (arrayIsEqual(Names[key], [r, g, b])) {\n          name = key; break;\n        }\n      }\n      return a === null && name !== '' ? name : `#${Converter.rgbToHex(r, g, b, a, true)}`;\n    };\n    switch (mode) {\n      case 'name': return nameOrShort();\n      case 'short': return `#${Converter.rgbToHex(r, g, b, a, true)}`;\n      case 'full':\n      default: return `#${Converter.rgbToHex(r, g, b, a)}`;\n    }\n  }\n\n  /**\n   * Represents color as RGB notation.\n   * @see https://www.w3.org/TR/css-color-4/#rgb-functions\n   *\n   * @param {RgbMode} [mode='default'] 'default'|'percent'\n   * @returns {string}\n   */\n  toRgb(mode: RgbMode = 'default'): string {\n    const color = this.getColorAs('rgb');\n    let [r, g, b]: number[]|string[] = color.values.map(x => Math.round(x));\n    if (mode === 'percent') {\n      [r, g, b] = [r, g, b].map(x => `${x / 255 * 100}%`);\n    }\n    return color.alpha === 1\n      ? `rgb(${r}, ${g}, ${b})`\n      : `rgba(${r}, ${g}, ${b}, ${color.alpha})`;\n  }\n\n  /**\n   * Represents color as HWB notation.\n   * @see https://www.w3.org/TR/css-color-4/#the-hwb-notation\n   * @returns {string} e.g. 'hwb(0, 0%, 0%, 0)'\n   */\n  toHwb(): string {\n    const color = this.getColorAs('hwb');\n    const [h, w, b] = color.values.map(x => decimal(x, 2));\n    const a = color.alpha === 1 ? '' : `, ${color.alpha}`;\n    return `hwb(${h}, ${w}%, ${b}%${a})`;\n  }\n\n  /**\n   * Represents color as HSL notation.\n   * @see https://www.w3.org/TR/css-color-4/#the-hsl-notation\n   * @returns {string}\n   */\n  toHsl(): string {\n    const color = this.getColorAs('hsl');\n    const [h, s, l] = color.values.map(x => decimal(x, 2));\n    return color.alpha === 1\n      ? `hsl(${h}, ${s}%, ${l}%)`\n      : `hsla(${h}, ${s}%, ${l}%, ${color.alpha})`;\n  }\n\n  /**\n   * Represents color as HSV notation. This format is similar to HSL.\n   * @returns {string}\n   */\n  toHsv(): string {\n    const color = this.getColorAs('hsv');\n    const [h, s, v] = color.values.map(x => decimal(x, 2));\n    return color.alpha === 1\n      ? `hsv(${h}, ${s}%, ${v}%)`\n      : `hsva(${h}, ${s}%, ${v}%, ${color.alpha})`;\n  }\n\n  /**\n   * Represents color as CMYK notation. e.g. 'cmyk(0%, 0%, 0%, 0%)'\n   * @see https://www.w3.org/TR/css-color-4/#cmyk-colors\n   * @returns {string}\n   */\n  toCmyk(): string {\n    const color = this.getColorAs('cmyk');\n    const [c, m, y, k] = color.values.map(x => decimal(x, 2));\n    const a = color.alpha === 1 ? '' : `, ${color.alpha}`;\n    return `cmyk(${c}%, ${m}%, ${y}%, ${k}%${a})`;\n  }\n\n  protected convertFromRgb([r, g, b]: number[], model: AcceptedModel): number[] {\n    switch (model) {\n      case 'rgb': return [r, g, b];\n      case 'hwb': return Converter.rgbToHwb(r, g, b);\n      case 'hsl': return Converter.rgbToHsl(r, g, b);\n      case 'hsv': return Converter.rgbToHsv(r, g, b);\n      case 'cmyk': return Converter.rgbToCmyk(r, g, b);\n    }\n  }\n\n  protected convertFromHwb([h, w, b]: number[], model: AcceptedModel): number[] {\n    const [red, green, blue] = Converter.hwbToRgb(h, w, b);\n    switch (model) {\n      case 'rgb': return [red, green, blue];\n      case 'hwb': return [h, w, b];\n      case 'hsl': return Converter.rgbToHsl(red, green, blue);\n      case 'hsv': return Converter.hwbToHsv(h, w, b);\n      case 'cmyk': return Converter.rgbToCmyk(red, green, blue);\n    }\n  }\n\n  protected convertFromHsl([h, s, l]: number[], model: AcceptedModel): number[] {\n    const [red, green, blue] = Converter.hslToRgb(h, s, l);\n    switch (model) {\n      case 'rgb': return [red, green, blue];\n      case 'hwb': return Converter.rgbToHwb(red, green, blue);\n      case 'hsl': return [h, s, l];\n      case 'hsv': return Converter.rgbToHsv(red, green, blue);\n      case 'cmyk': return Converter.rgbToCmyk(red, green, blue);\n    }\n  }\n\n  protected convertFromHsv([h, s, v]: number[], model: AcceptedModel): number[] {\n    const [red, green, blue] = Converter.hsvToRgb(h, s, v);\n    switch (model) {\n      case 'rgb': return [red, green, blue];\n      case 'hwb': return Converter.hsvToHwb(h, s, v);\n      case 'hsl': return Converter.rgbToHsl(red, green, blue);\n      case 'hsv': return [h, s, v];\n      case 'cmyk': return Converter.rgbToCmyk(red, green, blue);\n    }\n  }\n\n  protected convertFromCmyk([c, m, y, k]: number[], model: AcceptedModel): number[] {\n    const [red, green, blue] = Converter.cmykToRgb(c, m, y, k);\n    switch (model) {\n      case 'rgb': return [red, green, blue];\n      case 'hwb': return Converter.rgbToHwb(red, green, blue);\n      case 'hsl': return Converter.rgbToHsl(red, green, blue);\n      case 'hsv': return Converter.rgbToHsv(red, green, blue);\n      case 'cmyk': return [c, m, y, k];\n    }\n  }\n}\n\nexport default ColorFormatter;\n","import * as ColorName from 'color-name';\n\ninterface ColorNames {\n  [index: string]: [number, number, number];\n}\n\nexport default ColorName as ColorNames;\n","export type Color = ColorData;\nexport type AcceptedModel = 'rgb'|'hwb'|'hsl'|'hsv'|'cmyk';\n\n/** Type for `ColorSettable.toHex()` method. */\nexport type HexMode = 'full'|'short'|'name';\n/** Type for `ColorSettable.toRgb()` method. */\nexport type RgbMode = 'default'|'percent';\n\n/** A data object that includes color data. */\nexport interface ColorData {\n  model: AcceptedModel;\n  values: number[];\n  alpha?: number;\n}\n\n/** An argument for `ColorModifiable.random()` method. */\nexport interface RandomArguments {\n  /** The hue value from 0 to 360. Also you can give this as range. e.g. [0, 180] */\n  hue?: number|[number, number];\n  /** The whiteness value from 0 to 100. Also you can give this as range. e.g. [0, 50] */\n  white?: number|[number, number];\n  /** The blackness value from 0 to 100. Also you can give this as range. e.g. [0, 50] */\n  black?: number|[number, number];\n}\n\n/** It can set or get color data. and also can change color to another model. */\nexport interface ColorSettable {\n  color?: Color;\n\n  setColor: (color: Color) => this;\n  getColor: () => Color;\n  getColorAs: (model: AcceptedModel) => Color;\n  getModel: () => AcceptedModel|undefined;\n  changeModel: (model: AcceptedModel) => this;\n  getAlpha: () => number;\n  setAlpha: (alpha: number) => this;\n  convert: (color: Color, model: AcceptedModel) => Color;\n}\n\n/**\n * It can represent color to multiple notations.\n * accepted color models: 'rgb'|'hwb'|'hsl'|'hsv'|'cmyk' + 'hex'\n */\nexport interface ColorRepresentable {\n  color?: Color;\n\n  toString(model?: AcceptedModel|'hex', ...args: any[]): string;\n  toHex(mode?: HexMode): string;\n  toRgb(mode?: RgbMode): string;\n  toHwb(): string;\n  toHsl(): string;\n  toHsv(): string;\n  toCmyk(): string;\n}\n\n/**\n * It can access color state. such as brightness, luminance..\n * @see https://www.w3.org/TR/AERT/#color-contrast\n * @see https://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n */\nexport interface ColorStateAccessible {\n  color?: Color;\n\n  readonly brightness: number;\n  readonly isLight: boolean;\n  readonly isDark: boolean;\n  readonly luminance: number;\n\n  contrastRatioWith(color: ColorStateAccessible): number;\n  isContrastEnough(color: ColorStateAccessible): boolean;\n}\n\n/**\n * It can manipulate color values.\n */\nexport interface ColorModifiable<T extends ColorSettable> {\n  color?: Color;\n\n  lighten(amount: number): this;\n  darken(amount: number): this;\n  saturate(amount: number): this;\n  desaturate(amount: number): this;\n  grayscale(): this;\n  whiten(amount: number): this;\n  blacken(amount: number): this;\n  rotate(degree: number): this;\n  mix(color: T, percent?: number): T;\n  complement(): this;\n  invert(percent?: number): this;\n}\n","import { Color } from './color';\nimport { resolveHwb } from './color-converter';\nimport Names from './color-names';\nimport { clamp, degree, resolveAlpha } from './util/util';\n\nexport default function inputParser(input: string): Color|null {\n  if (input in Names) {\n    // Named colors.\n    return {\n      model: 'rgb',\n      values: Names[input],\n      alpha: 1,\n    };\n  } else if (input === 'transparent') {\n    // 'transparent'.\n    return {\n      model: 'rgb',\n      values: [0, 0, 0],\n      alpha: 0,\n    };\n  } else {\n    // parse string.\n    const prefix = input.substr(0, 3).toLowerCase();\n    switch (prefix) {\n      case 'hwb': return parseHwb(input);\n      case 'hsl': return parseHsl(input);\n      case 'hsv': return parseHsv(input);\n      case 'cmy': return parseCmyk(input);\n      default: return parseRgb(input);\n    }\n  }\n}\n\nfunction parseRgb(input: string): Color|null {\n  const hex = /^#?([a-f0-9]{6})([a-f0-9]{2})?$/i;\n  const shortHex = /^#?([a-f0-9]{3})([a-f0-9]{1})?$/i;\n  const rgba = /^rgba?\\s*\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d.]+)\\s*)?\\)$/;\n  // tslint:disable-next-line:max-line-length\n  const percent = /^rgba?\\s*\\(\\s*([+-]?[\\d.]+)%\\s*,\\s*([+-]?[\\d.]+)%\\s*,\\s*([+-]?[\\d.]+)%\\s*(?:,\\s*([+-]?[\\d.]+)\\s*)?\\)$/;\n  const hexToAlpha = (num: string) => Math.round((parseInt(num, 16) / 255) * 100) / 100;\n  let values: number[];\n  let alpha: number;\n\n  if (hex.test(input)) {\n    const [, h, a] = input.match(hex);\n    values = h.match(/.{2}/g).map(x => parseInt(x, 16));\n    alpha = a ? hexToAlpha(a) : 1;\n  } else if (shortHex.test(input)) {\n    const [, h, a] = input.match(shortHex);\n    values = h.match(/.{1}/g).map(x => parseInt(x + x, 16));\n    alpha = a ? hexToAlpha(a) : 1;\n  } else if (rgba.test(input)) {\n    const [, r, g, b, a] = input.match(rgba);\n    values = [r, g, b].map(x => parseInt(x, 0));\n    alpha = resolveAlpha(a);\n  } else if (percent.test(input)) {\n    const [, r, g, b, a] = input.match(percent);\n    values = [r, g, b].map(x => Math.round(parseFloat(x) * 2.55));\n    alpha = resolveAlpha(a);\n  } else {\n    return null;\n  }\n  return {\n    model: 'rgb',\n    values: values.map(x => clamp(x, 0, 255)),\n    alpha: clamp(alpha, 0, 1),\n  };\n}\n\nfunction parseHsl(input: string): Color|null {\n  // tslint:disable-next-line:max-line-length\n  const hsl = /^hsla?\\s*\\(\\s*([+-]?\\d*[.]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d.]+)%\\s*,\\s*([+-]?[\\d.]+)%\\s*(?:,\\s*([+-]?[\\d.]+)\\s*)?\\)$/i;\n\n  if (hsl.test(input)) {\n    const [, h, s, l, a] = input.match(hsl);\n    return {\n      model: 'hsl',\n      values: [\n        degree(h),\n        clamp(parseFloat(s), 0, 100),\n        clamp(parseFloat(l), 0, 100),\n      ],\n      alpha: resolveAlpha(a),\n    };\n  } else {\n    return null;\n  }\n}\n\nfunction parseHwb(input: string): Color|null {\n  // tslint:disable-next-line:max-line-length\n  const hwb = /^hwba?\\s*\\(\\s*([+-]?\\d*[.]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d.]+)%\\s*,\\s*([+-]?[\\d.]+)%\\s*(?:,\\s*([+-]?[\\d.]+)\\s*)?\\)$/i;\n\n  if (hwb.test(input)) {\n    const [, h, w, b, a] = input.match(hwb);\n    return {\n      model: 'hwb',\n      values: resolveHwb(\n        degree(h),\n        clamp(parseFloat(w), 0, 100),\n        clamp(parseFloat(b), 0, 100),\n      ),\n      alpha: resolveAlpha(a),\n    };\n  } else {\n    return null;\n  }\n}\n\nfunction parseHsv(input: string): Color|null {\n  // tslint:disable-next-line:max-line-length\n  const hsv = /^hsva?\\s*\\(\\s*([+-]?\\d*[.]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d.]+)%\\s*,\\s*([+-]?[\\d.]+)%\\s*(?:,\\s*([+-]?[\\d.]+)\\s*)?\\)$/i;\n\n  if (hsv.test(input)) {\n    const [, h, s, v, a] = input.match(hsv);\n    return {\n      model: 'hsv',\n      values: [\n        degree(h),\n        clamp(parseFloat(s), 0, 100),\n        clamp(parseFloat(v), 0, 100),\n      ],\n      alpha: resolveAlpha(a),\n    };\n  } else {\n    return null;\n  }\n}\n\nfunction parseCmyk(input: string): Color|null {\n  // tslint:disable-next-line:max-line-length\n  const cmyk = /^cmyk\\s*\\(\\s*([+-]?[\\d.]+)%\\s*,\\s*([+-]?[\\d.]+)%\\s*,\\s*([+-]?[\\d.]+)%\\s*,\\s*([+-]?[\\d.]+)%\\s*(?:,\\s*([+-]?[\\d.]+)\\s*)?\\)$/i;\n\n  if (cmyk.test(input)) {\n    const [, c, m, y, k, a] = input.match(cmyk);\n    return {\n      model: 'cmyk',\n      values: [\n        clamp(parseFloat(c), 0, 100),\n        clamp(parseFloat(m), 0, 100),\n        clamp(parseFloat(y), 0, 100),\n        clamp(parseFloat(k), 0, 100),\n      ],\n      alpha: resolveAlpha(a),\n    };\n  } else {\n    return null;\n  }\n}\n","export function padStart(str: string, length: number, chars: string): string {\n  const space = length - str.length;\n  return space > 0 ? `${makePad(chars, space)}${str}` : str;\n}\n\nexport function padEnd(str: string, length: number, chars: string): string {\n  const space = length - str.length;\n  return space > 0 ? `${str}${makePad(chars, space)}` : str;\n}\n\nfunction makePad(chars: string, limit: number): string {\n  while (chars.length < limit) {\n    chars += chars;\n  }\n  return chars.substring(0, limit);\n}\n\nexport function clamp(num: number, min: number, max: number): number {\n  return Math.min(Math.max(min, num), max);\n}\n\nexport function degree(num: string|number): number {\n  num = typeof num === 'string' ? parseFloat(num) : num;\n  return (num % 360 + 360) % 360;\n}\n\nexport function resolveAlpha(a: string|number): number {\n  a = typeof a === 'string' ? parseFloat(a) : a;\n  return clamp(isNaN(a) ? 1 : a, 0, 1);\n}\n\n// @see: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round\nexport function decimal(num: number, precision: number): number {\n  const factor = Math.pow(10, precision);\n  return Math.round(num * factor) / factor;\n}\n\nexport function getRandom(min: number, max: number, precision: number = 0): number {\n  const num = Math.random() * (max - min) + min;\n  return decimal(num, precision);\n}\n\n// https://stackoverflow.com/questions/7837456/how-to-compare-arrays-in-javascript#answer-19746771\nexport function arrayIsEqual(arr1: any[], arr2: any[]): boolean {\n  return arr1.length === arr2.length && arr1.every((v, i) => {\n    return Array.isArray(v) ? arrayIsEqual(v, arr2[i]) : v === arr2[i];\n  });\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {\n  AcceptedModel,\n  Color,\n  ColorModifiable,\n  ColorStateAccessible,\n  RandomArguments,\n} from './color';\nimport { resolveHwb } from './color-converter';\nimport ColorFormatter from './color-formatter';\nimport parser from './input-parser';\nimport {\n  clamp,\n  degree,\n  getRandom,\n} from './util/util';\n\nexport * from './color';\n\nexport { ColorFormatter };\n\ntype manipulateFn = (...args: number[]) => number[];\n\nexport class MooColor extends ColorFormatter implements ColorModifiable<MooColor>, ColorStateAccessible {\n\n  static mix(color1: MooColor|string|Color, color2: MooColor|string|Color, percentOf1: number = 50): MooColor {\n    const c1 = (color1 instanceof MooColor) ? color1 : new MooColor(color1);\n    const c2 = (color2 instanceof MooColor) ? color2 : new MooColor(color2);\n    return c2.mix(c1, percentOf1);\n  }\n\n  /**\n   * Create random color as HWB color model.\n   *\n   * @static\n   * @param {RandomArguments} [{hue, white, black}={}]\n   * @returns {MooColor}\n   * @memberof MooColor\n   */\n  static random({hue, white, black}: RandomArguments = {}): MooColor {\n    [hue, white, black] = [hue, white, black].map((x, i) => {\n      if (typeof x === 'number') {\n        return x;\n      } else if (Array.isArray(x)) {\n        const precision = i === 0 ? 0 : 2;\n        return getRandom(Math.min(...x), Math.max(...x), precision);\n      } else {\n        return i === 0 ? getRandom(0, 360) : getRandom(0, 100, 2);\n      }\n    });\n    return new MooColor({\n      model: 'hwb',\n      values: resolveHwb(degree(hue), clamp(white, 0, 100), clamp(black, 0, 100)),\n      alpha: 1,\n    });\n  }\n\n  /**\n   * Creates an instance of MooColor.\n   * @param {(string|Color)} [color] color value. e.g. '#ff0000' 'rgba(255, 0, 0, .5)' 'hsl(120, 50%, 100%)'\n   * @memberof MooColor\n   */\n  constructor(color?: string|Color) {\n    super();\n    if (typeof color === 'object' && color !== null) {\n      this.setColor(color as Color);\n    } else if (typeof color === 'string' || typeof color === 'undefined') {\n      color = color ? color : '#000';\n      this.setColorByParser(color as string);\n    }\n  }\n\n  setColorByParser(str: string): this {\n    const color: Color = parser(str);\n    if (!color) {\n      throw new Error('parsing error!');\n    }\n    return this.setColor(color);\n  }\n\n  clone(): MooColor {\n    return new MooColor(this.color);\n  }\n\n  /**\n   * Returns color brightness from 0 to 255. (It based RGB)\n   * @see https://www.w3.org/TR/AERT/#color-contrast\n   * @readonly\n   * @type {number}\n   */\n  get brightness(): number {\n    const [r, g, b] = this.getColorAs('rgb').values;\n    return ((r * 299) + (g * 587) + (b * 114)) / 1000;\n  }\n\n  /**\n   * Returns whether color is light or not.\n   * @readonly\n   * @type {boolean}\n   */\n  get isLight(): boolean {\n    return this.brightness >= 128;\n  }\n\n  /**\n   * Returns whether color is dark or not.\n   * @readonly\n   * @type {boolean}\n   */\n  get isDark(): boolean {\n    return this.brightness < 128;\n  }\n\n  /**\n   * Returns luminance value of the color. value from 0 to 1.\n   * @see https://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n   * @readonly\n   * @type {number}\n   */\n  get luminance(): number {\n    const [r, g, b] = this.getColorAs('rgb').values.map(x => x / 255);\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  }\n\n  /**\n   * Returns contrast ratio with other color. range from 0 to 21.\n   * @see https://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n   * @param {MooColor} color\n   * @returns {number} 0-21\n   */\n  contrastRatioWith(color: MooColor): number {\n    const max = Math.max(this.luminance, color.luminance);\n    const min = Math.min(this.luminance, color.luminance);\n    return (max + 0.05) / (min + 0.05);\n  }\n\n  /**\n   * Return true if contrast ratio >= 4.5\n   * @see https://www.w3.org/WAI/WCAG20/quickref/#qr-visual-audio-contrast-contrast\n   * @param {MooColor} color\n   * @returns {boolean}\n   */\n  isContrastEnough(color: MooColor): boolean {\n    return this.contrastRatioWith(color) >= 4.5;\n  }\n\n  /**\n   * Increase lightness.\n   * @param {number} amount The amount from 0 to 100.\n   * @returns {this}\n   */\n  lighten(amount: number): this {\n    return this.manipulate('hsl', (h, s, l) => {\n      l = clamp(l + amount, 0, 100);\n      return [h, s, l];\n    });\n  }\n\n  /**\n   * Decrease lightness.\n   * @param {number} amount The amount from 0 to 100.\n   * @returns {this}\n   */\n  darken(amount: number): this {\n    return this.manipulate('hsl', (h, s, l) => {\n      l = clamp(l - amount, 0, 100);\n      return [h, s, l];\n    });\n  }\n\n  /**\n   * Increase saturation.\n   * @param {number} amount The amount from 0 to 100.\n   * @returns {this}\n   */\n  saturate(amount: number): this {\n    return this.manipulate('hsl', (h, s, l) => {\n      s = clamp(s + amount, 0, 100);\n      return [h, s, l];\n    });\n  }\n\n  /**\n   * Decrease saturation.\n   * @param {number} amount The amount from 0 to 100.\n   * @returns {this}\n   */\n  desaturate(amount: number): this {\n    return this.manipulate('hsl', (h, s, l) => {\n      s = clamp(s - amount, 0, 100);\n      return [h, s, l];\n    });\n  }\n\n  /**\n   * Sets saturation value to 0.\n   * @returns {this}\n   */\n  grayscale(): this {\n    return this.manipulate('hsl', (h, s, l) => [h, 0, l]);\n  }\n\n  /**\n   * Modify whiteness.\n   * @param {number} amount The amount from -100 to 100.\n   * @returns {this}\n   */\n  whiten(amount: number): this {\n    return this.manipulate(\n      'hwb',\n      (h, w, b) => this.resolveHwb(h, clamp(w + amount, 0, 100), b),\n    );\n  }\n\n  /**\n   * Modify blackness.\n   * @param {number} amount The amount from -100 to 100.\n   * @returns {this}\n   */\n  blacken(amount: number): this {\n    return this.manipulate(\n      'hwb',\n      (h, w, b) => this.resolveHwb(h, w, clamp(b + amount, 0, 100)),\n    );\n  }\n\n  /**\n   * Rotate hue value.\n   * @param {number} d degree 0-360\n   * @returns {this}\n   */\n  rotate(d: number): this {\n    return this.manipulate('hsl', (h, s, l) => [degree(h + d), s, l]);\n  }\n\n  /**\n   * Mix two colors.\n   * @param {MooColor} color The color to mixed.\n   * @param {number} [percent=50] The percentage value of color to be mixed.\n   * @returns {MooColor} The mixed color that as a new instance of `MooColor`.\n   */\n  mix(color: MooColor, percent: number = 50): MooColor {\n    percent /= 100;\n    const m = this.getModel();\n    const c1 = this.getColorAs('rgb');\n    const c2 = color.getColorAs('rgb');\n    return new MooColor({\n      model: 'rgb',\n      values: c1.values.map((v, i) => v + (c2.values[i] - v) * percent),\n      alpha: c1.alpha + (c2.alpha - c1.alpha) * percent,\n    }).changeModel(m);\n  }\n\n  /**\n   * Sets color to the complement of a color.\n   *\n   * @returns {this}\n   */\n  complement(): this {\n    return this.manipulate('hsl', (h, s, l) => [degree(h + 180), s, l]);\n  }\n\n  /**\n   * Sets color to the inverse (negative) of a color.\n   *\n   * @param {number} [percent=100] The relative percent of the color that inverse.\n   * @returns {this}\n   */\n  invert(percent: number = 100): this {\n    percent /= 100;\n    const absRound = (x: number) => Math.round(Math.abs(x));\n    return this.manipulate('rgb', (r, g, b) => [r, g, b].map(x => absRound(255 * percent - x)));\n  }\n\n  protected manipulate(asModel: AcceptedModel, callback: manipulateFn): this {\n    const m = this.color.model;\n    const color = this.getColorAs(asModel);\n    color.values = callback(...color.values);\n    return this.setColor(color).changeModel(m);\n  }\n}\n\nexport default MooColor;\n"],"names":[],"sourceRoot":""}