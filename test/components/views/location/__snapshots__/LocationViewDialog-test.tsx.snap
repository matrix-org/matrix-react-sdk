// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<LocationViewDialog /> renders map correctly 1`] = `
<Map
  centerGeoUri="geo:51.5076,-0.1276"
  className="mx_LocationViewDialog_map"
  id="mx_LocationViewDialog_$2"
  interactive={true}
  onError={[Function]}
>
  <div
    className="mx_Map mx_LocationViewDialog_map"
    id="mx_Map_mx_LocationViewDialog_$2"
    onClick={[Function]}
  >
    <SmartMarker
      geoUri="geo:51.5076,-0.1276"
      id="mx_LocationViewDialog_$2-marker"
      map={
        MockMap {
          "_events": Object {
            "error": [Function],
          },
          "_eventsCount": 1,
          "_maxListeners": undefined,
          "addControl": [MockFunction] {
            "calls": Array [
              Array [
                mockConstructor {},
                "top-right",
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          },
          "fitBounds": [MockFunction],
          "removeControl": [MockFunction],
          "setCenter": [MockFunction] {
            "calls": Array [
              Array [
                Object {
                  "lat": 51.5076,
                  "lon": -0.1276,
                },
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          },
          "setStyle": [MockFunction],
          "zoomIn": [MockFunction],
          "zoomOut": [MockFunction],
          Symbol(kCapture): false,
        }
      }
    >
      <span>
        <ForwardRef
          id="mx_LocationViewDialog_$2-marker"
        >
          <div
            className="mx_Marker mx_Marker_defaultColor"
            id="mx_LocationViewDialog_$2-marker"
          >
            <OptionalTooltip>
              <div
                className="mx_Marker_border"
              >
                <div
                  className="mx_Marker_icon"
                />
              </div>
            </OptionalTooltip>
          </div>
        </ForwardRef>
      </span>
    </SmartMarker>
    <ZoomButtons
      map={
        MockMap {
          "_events": Object {
            "error": [Function],
          },
          "_eventsCount": 1,
          "_maxListeners": undefined,
          "addControl": [MockFunction] {
            "calls": Array [
              Array [
                mockConstructor {},
                "top-right",
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          },
          "fitBounds": [MockFunction],
          "removeControl": [MockFunction],
          "setCenter": [MockFunction] {
            "calls": Array [
              Array [
                Object {
                  "lat": 51.5076,
                  "lon": -0.1276,
                },
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          },
          "setStyle": [MockFunction],
          "zoomIn": [MockFunction],
          "zoomOut": [MockFunction],
          Symbol(kCapture): false,
        }
      }
    >
      <div
        className="mx_ZoomButtons"
      >
        <AccessibleButton
          className="mx_ZoomButtons_button"
          data-test-id="map-zoom-in-button"
          element="div"
          onClick={[Function]}
          role="button"
          tabIndex={0}
          title="Zoom in"
        >
          <div
            className="mx_AccessibleButton mx_ZoomButtons_button"
            data-test-id="map-zoom-in-button"
            onClick={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            role="button"
            tabIndex={0}
            title="Zoom in"
          >
            <div
              className="mx_ZoomButtons_icon"
            />
          </div>
        </AccessibleButton>
        <AccessibleButton
          className="mx_ZoomButtons_button"
          data-test-id="map-zoom-out-button"
          element="div"
          onClick={[Function]}
          role="button"
          tabIndex={0}
          title="Zoom out"
        >
          <div
            className="mx_AccessibleButton mx_ZoomButtons_button"
            data-test-id="map-zoom-out-button"
            onClick={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            role="button"
            tabIndex={0}
            title="Zoom out"
          >
            <div
              className="mx_ZoomButtons_icon"
            />
          </div>
        </AccessibleButton>
      </div>
    </ZoomButtons>
  </div>
</Map>
`;
