# Produce a build of element-web with this version of react-sdk
# and any matching branches of element-web and js-sdk, output it
# as an artifact and run integration tests.
name: Element Web - Build
on:
    schedule:
        - cron: "17 4 * * 1-5" # every weekday at 04:17 UTC
    pull_request: {}
    merge_group:
        types: [checks_requested]
    push:
        branches: [develop, master]
    repository_dispatch:
        types: [upstream-sdk-notify]

    # support triggering from other workflows
    workflow_call:
        inputs:
            react-sdk-repository:
                type: string
                required: true
                description: "The name of the github repository to check out and build."

            matrix-js-sdk-sha:
                type: string
                required: false
                description: "The Git SHA of matrix-js-sdk to build against. By default, will use a matching branch name if it exists, or develop."

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
    cancel-in-progress: true

env:
    # fetchdep.sh needs to know our PR number
    PR_NUMBER: ${{ github.event.pull_request.number }}

jobs:
    build:
        name: "Build Element-Web"
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v3
              with:
                  repository: ${{ inputs.react-sdk-repository || github.repository }}

            - uses: actions/setup-node@v3
              with:
                  cache: "yarn"

            - name: Fetch layered build
              id: layered_build
              env:
                  # tell layered.sh to check out the right sha of the JS-SDK, if we were given one
                  JS_SDK_GITHUB_BASE_REF: ${{ inputs.matrix-js-sdk-sha }}
              run: |
                  scripts/ci/layered.sh
                  JSSDK_SHA=$(git -C matrix-js-sdk rev-parse --short=12 HEAD)
                  REACT_SHA=$(git rev-parse --short=12 HEAD)
                  VECTOR_SHA=$(git -C element-web rev-parse --short=12 HEAD)
                  echo "VERSION=$VECTOR_SHA-react-$REACT_SHA-js-$JSSDK_SHA" >> $GITHUB_OUTPUT

            - name: Copy config
              run: cp element.io/develop/config.json config.json
              working-directory: ./element-web

            - name: Build
              env:
                  CI_PACKAGE: true
                  VERSION: "${{ steps.layered_build.outputs.VERSION }}"
              run: |
                  yarn build
                  echo $VERSION > webapp/version
              working-directory: ./element-web

            # Record the react-sdk sha so our cypress tests are from the same sha
            - name: Record react-sdk SHA
              run: |
                  git rev-parse HEAD > element-web/webapp/sha

            - name: Upload Artifact
              uses: actions/upload-artifact@v3
              with:
                  name: previewbuild
                  path: element-web/webapp
                  # We'll only use this in a triggered job, then we're done with it
                  retention-days: 1

    tests:
        name: "Run Tests"
        needs: build
        runs-on: ubuntu-latest
        permissions:
            actions: read
            issues: read
            pull-requests: read
        environment: Cypress
        steps:
            - id: setup-chrome
              uses: browser-actions/setup-chrome@c485fa3bab6be59dce18dbc18ef6ab7cbc8ff5f1

            - uses: actions/download-artifact@v3
              with:
                  name: previewbuild
                  path: webapp

            - uses: actions/checkout@v3
              with:
                  persist-credentials: false
                  path: matrix-react-sdk

            - name: Run Cypress tests
              uses: cypress-io/github-action@fbfad281d97a63e3e8a605ebfccba8dbea8aea93
              with:
                  working-directory: matrix-react-sdk
                  # The built-in Electron runner seems to grind to a halt trying to run the tests, so use chrome.
                  browser: ${{ steps.setup-chrome.outputs.chrome-path }}
                  headed: true
                  start: npx serve -p 8080 ../webapp
                  wait-on: "http://localhost:8080"
                  record: true
                  command-prefix: "yarn percy exec --parallel --"
                  config: '{"reporter":"cypress-multi-reporters", "reporterOptions": { "configFile": "cypress-ci-reporter-config.json" } }'
                  ci-build-id: ${{ needs.prepare.outputs.uuid }}
              env:
                  # pass the Dashboard record key as an environment variable
                  CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}

                  # Use existing chromium rather than downloading another
                  PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true

                  # pass GitHub token to allow accurately detecting a build vs a re-run build
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

                  # make Node's os.tmpdir() return something where we actually have permissions
                  TMPDIR: ${{ runner.temp }}

                  # tell Cypress more details about the context of this run
                  COMMIT_INFO_BRANCH: ${{ github.event.workflow_run.head_branch }}
                  COMMIT_INFO_SHA: ${{ github.event.workflow_run.head_sha }}
                  COMMIT_INFO_REMOTE: ${{ github.repositoryUrl }}
                  COMMIT_INFO_MESSAGE: ${{ needs.prepare.outputs.commit_message }}
                  COMMIT_INFO_AUTHOR: ${{ needs.prepare.outputs.commit_author }}
                  COMMIT_INFO_EMAIL: ${{ needs.prepare.outputs.commit_email }}
                  CYPRESS_PULL_REQUEST_ID: ${{ needs.prepare.outputs.pr_id }}
                  CYPRESS_PULL_REQUEST_URL: https://github.com/${{ github.repository }}/pull/${{ needs.prepare.outputs.pr_id }}

                  PERCY_BROWSER_EXECUTABLE: ${{ steps.setup-chrome.outputs.chrome-path }}
                  PERCY_ENABLE: 0

            - name: Upload Artifact
              if: failure()
              uses: actions/upload-artifact@v3
              with:
                  name: cypress-results
                  path: |
                      matrix-react-sdk/cypress/screenshots
                      matrix-react-sdk/cypress/videos
                      matrix-react-sdk/cypress/synapselogs

            - name: Upload reports
              if: always()
              uses: actions/upload-artifact@v3
              with:
                  name: cypress-junit
                  path: matrix-react-sdk/cypress/results
