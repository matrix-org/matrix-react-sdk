/*
Copyright 2015, 2016 OpenMarket Ltd
Copyright 2020-2021 The Matrix.org Foundation C.I.C.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

$left-gutter: 64px;

.mx_EventTile:not([data-layout=bubble]) {
    max-width: 100%;
    clear: both;
    padding-top: 18px;
    font-size: $font-14px;
    position: relative;

    &[data-shape=thread_list][data-notification]::before {
        content: "";
        position: absolute;
        width: 8px;
        height: 8px;
        border-radius: 50%;
        right: -16px;
        top: 7px;
    }

    &[data-shape=thread_list][data-notification=total]::before {
        background-color: $roomtile-default-badge-bg-color;
    }

    &[data-shape=thread_list][data-notification=highlight]::before {
        background-color: $alert;
    }

    .mx_ThreadInfo {
        margin-right: 110px;
        margin-left: 64px;
    }

    &.mx_EventTile_info {
        padding-top: 1px;
    }

    .mx_EventTile_avatar {
        top: 14px;
        left: 8px;
        cursor: pointer;
        user-select: none;
    }

    &.mx_EventTile_info .mx_EventTile_avatar {
        top: $font-6px;
        left: $left-gutter;
    }

    &.mx_EventTile_continuation {
        padding-top: 0px !important;

        &.mx_EventTile_isEditing {
            padding-top: 5px !important;
            margin-top: -5px;
        }
    }

    &.mx_EventTile_isEditing {
        background-color: $header-panel-bg-color;
    }

    .mx_SenderProfile {
        color: $primary-content;
        font-size: $font-14px;
        display: inline-block; /* anti-zalgo, with overflow hidden */
        overflow: hidden;
        padding-bottom: 0px;
        padding-top: 0px;
        margin: 0px;
        /* the next three lines, along with overflow hidden, truncate long display names */
        white-space: nowrap;
        text-overflow: ellipsis;
        max-width: calc(100% - $left-gutter);
    }

    .mx_SenderProfile .mx_Flair {
        opacity: 0.7;
        margin-left: 5px;
        display: inline-block;
        vertical-align: top;
        overflow: hidden;
        user-select: none;

        img {
            vertical-align: -2px;
            margin-right: 2px;
            border-radius: 8px;
        }
    }

    &.mx_EventTile_isEditing .mx_MessageTimestamp {
        visibility: hidden;
    }

    .mx_MessageTimestamp {
        display: block;
        white-space: nowrap;
        left: 0px;
        text-align: center;
        user-select: none;
    }

    &.mx_EventTile_continuation .mx_EventTile_line {
        clear: both;
    }

    .mx_EventTile_line, .mx_EventTile_reply {
        position: relative;
        padding-left: $left-gutter;
        border-radius: 8px;
    }

    .mx_EventTile_reply {
        margin-right: 10px;
    }

    /* this is used for the tile for the event which is selected via the URL.
     * TODO: ultimately we probably want some transition on here.
     */
    &.mx_EventTile_selected > .mx_EventTile_line {
        box-shadow: inset calc(50px + $selected-message-border-width) 0 0 -50px $accent;
        background-color: $event-selected-color;
    }

    &.mx_EventTile_highlight,
    &.mx_EventTile_highlight .markdown-body {
        color: $alert;

        .mx_EventTile_line {
            background-color: $event-highlight-bg-color;
        }
    }

    &.mx_EventTile_selected.mx_EventTile_info .mx_EventTile_line {
        padding-left: calc($left-gutter + 18px);
    }

    &.mx_EventTile:hover .mx_EventTile_line,
    &.mx_EventTile.mx_EventTile_actionBarFocused .mx_EventTile_line,
    &.mx_EventTile.focus-visible:focus-within .mx_EventTile_line {
        background-color: $event-selected-color;
    }

    .mx_EventTile_searchHighlight {
        background-color: $accent;
        color: $accent-fg-color;
        border-radius: 5px;
        padding-left: 2px;
        padding-right: 2px;
        cursor: pointer;
    }

    .mx_EventTile_searchHighlight a {
        background-color: $accent;
        color: $accent-fg-color;
    }

    .mx_EventTile_receiptSent,
    .mx_EventTile_receiptSending {
        // We don't use `position: relative` on the element because then it won't line
        // up with the other read receipts

        &::before {
            background-color: $tertiary-content;
            mask-repeat: no-repeat;
            mask-position: center;
            mask-size: 14px;
            width: 14px;
            height: 14px;
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
        }
    }
    .mx_EventTile_receiptSent::before {
        mask-image: url('$(res)/img/element-icons/circle-sent.svg');
    }
    .mx_EventTile_receiptSending::before {
        mask-image: url('$(res)/img/element-icons/circle-sending.svg');
    }

    &.mx_EventTile_contextual {
        opacity: 0.4;
    }

    .mx_EventTile_msgOption {
        float: right;
        text-align: right;
        position: relative;
        width: 90px;

        /* Hack to stop the height of this pushing the messages apart.
           Replaces margin-top: -6px. This interacts better with a read
           marker being in between. Content overflows. */
        height: 1px;

        margin-right: 10px;
    }

    .mx_EventTile_msgOption a {
        text-decoration: none;
    }

    /* De-zalgoing */
    .mx_EventTile_body {
        overflow-y: hidden;
    }

    &.mx_EventTile_selected .mx_EventTile_line,
    &:hover .mx_EventTile_line {
        border-top-left-radius: 4px;
        border-bottom-left-radius: 4px;
    }

    &:hover.mx_EventTile_verified .mx_EventTile_line {
        box-shadow: inset calc(50px + $selected-message-border-width) 0 0 -50px $e2e-verified-color;
    }

    &:hover.mx_EventTile_unverified .mx_EventTile_line {
        box-shadow: inset calc(50px + $selected-message-border-width) 0 0 -50px $e2e-unverified-color;
    }

    &:hover.mx_EventTile_unknown .mx_EventTile_line {
        box-shadow: inset calc(50px + $selected-message-border-width) 0 0 -50px $e2e-unknown-color;
    }

    &:hover.mx_EventTile_verified.mx_EventTile_info .mx_EventTile_line,
    &:hover.mx_EventTile_unverified.mx_EventTile_info .mx_EventTile_line,
    &:hover.mx_EventTile_unknown.mx_EventTile_info .mx_EventTile_line {
        padding-left: calc($left-gutter + 18px + $selected-message-border-width);
    }

    /* End to end encryption stuff */
    &:hover .mx_EventTile_e2eIcon {
        opacity: 1;
    }

    .mx_MImageBody {
        margin-right: 34px;
    }

    .mx_EventTile_e2eIcon {
        position: absolute;
        top: 6px;
        left: 44px;
        bottom: 0;
        right: 0;
    }

    .mx_ReactionsRow {
        margin: 0;
        padding: 4px 64px;
    }
}

.mx_EventTile:not([data-layout=bubble]).mx_EventTile_info .mx_EventTile_line,
.mx_EventListSummary:not([data-layout=bubble]) > :not(.mx_EventTile) .mx_EventTile_avatar ~ .mx_EventTile_line {
    padding-left: calc($left-gutter + 18px);
}

.mx_EventListSummary:not([data-layout=bubble]) .mx_EventTile_line {
    padding-left: calc($left-gutter);
}

/* all the overflow-y: hidden; are to trap Zalgos -
   but they introduce an implicit overflow-x: auto.
   so make that explicitly hidden too to avoid random
   horizontal scrollbars occasionally appearing, like in
   https://github.com/vector-im/vector-web/issues/1154 */
.mx_EventTile_content {
    overflow-y: hidden;
    overflow-x: hidden;
    margin-right: 34px;
}

/* Spoiler stuff */
.mx_EventTile_spoiler {
    cursor: pointer;
}

.mx_EventTile_spoiler_reason {
    color: $event-timestamp-color;
    font-size: $font-11px;
}

.mx_EventTile_spoiler_content {
    filter: blur(5px) saturate(0.1) sepia(1);
    transition-duration: 0.5s;
}

.mx_EventTile_spoiler.visible > .mx_EventTile_spoiler_content {
    filter: none;
}

.mx_RoomView_timeline_rr_enabled {
    .mx_EventTile[data-layout=group] {
        .mx_EventTile_line {
            /* ideally should be 100px, but 95px gives us a max thumbnail size of 800x600, which is nice */
            margin-right: 110px;
        }
    }
    // on ELS we need the margin to allow interaction with the expand/collapse button which is normally in the RR gutter
}

.mx_SenderProfile {
    cursor: pointer;
}

.mx_EventTile_bubbleContainer {
    display: grid;
    grid-template-columns: 1fr 100px;

    .mx_EventTile_line {
        margin-right: 0;
        grid-column: 1 / 3;
        // override default padding of mx_EventTile_line so that we can be centered
        padding: 0 !important;
    }

    .mx_EventTile_msgOption {
        grid-column: 2;
    }

    &:hover {
        .mx_EventTile_line {
            // To avoid bubble events being highlighted
            background-color: inherit !important;
        }
    }
}

.mx_EventTile_readAvatars {
    position: relative;
    display: inline-block;
    width: 14px;
    height: 14px;
    // This aligns the avatar with the last line of the
    // message. We want to move it one line up - 2.2rem
    top: -2.2rem;
    user-select: none;
    z-index: 1;
}

.mx_EventTile_readAvatars .mx_BaseAvatar {
    position: absolute;
    display: inline-block;
    height: $font-14px;
    width: $font-14px;

    will-change: left, top;
    transition:
        left var(--transition-short) ease-out,
        top var(--transition-standard) ease-out;
}

.mx_EventTile_readAvatarRemainder {
    color: $event-timestamp-color;
    font-size: $font-11px;
    position: absolute;
}

/* HACK to override line-height which is already marked important elsewhere */
.mx_EventTile_bigEmoji.mx_EventTile_bigEmoji {
    font-size: 48px !important;
    line-height: 57px !important;
}

.mx_EventTile_content .mx_EventTile_edited {
    user-select: none;
    font-size: $font-12px;
    color: $roomtopic-color;
    display: inline-block;
    margin-left: 9px;
    cursor: pointer;
}

.mx_EventTile_e2eIcon {
    position: relative;
    width: 14px;
    height: 14px;
    display: block;
    opacity: 0.2;
    background-repeat: no-repeat;
    background-size: contain;

    &::before, &::after {
        content: "";
        display: block;
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        mask-repeat: no-repeat;
        mask-position: center;
        mask-size: contain;
    }

    &::before {
        mask-repeat: no-repeat;
        mask-position: center;
        mask-size: 80%;
    }
}

.mx_EventTile_e2eIcon_warning {
    &::after {
        mask-image: url('$(res)/img/e2e/warning.svg');
        background-color: $alert;
    }
    opacity: 1;
}

.mx_EventTile_e2eIcon_normal {
    &::after {
        mask-image: url('$(res)/img/e2e/normal.svg');
        background-color: $header-panel-text-primary-color;
    }
    opacity: 1;
}

/* Various markdown overrides */

.mx_EventTile_body {
    a:hover {
        text-decoration: underline;
    }

    pre {
        border: 1px solid transparent;
    }
}

.mx_EventTile_clamp {
    .mx_EventTile_body {
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
        text-overflow: ellipsis;
        display: -webkit-box;
    }
}

.mx_EventTile_content .markdown-body {
    font-family: inherit !important;
    white-space: normal !important;
    line-height: inherit !important;
    color: inherit; // inherit the colour from the dark or light theme by default (but not for code blocks)
    font-size: $font-14px;

    pre, code {
        font-family: $monospace-font-family !important;
        background-color: $codeblock-background-color;
    }

    pre code > * {
        display: inline;
    }

    pre {
        // have to use overlay rather than auto otherwise Linux and Windows
        // Chrome gets very confused about vertical spacing:
        // https://github.com/vector-im/vector-web/issues/754
        overflow-x: overlay;
        overflow-y: visible;

        &::-webkit-scrollbar-corner {
            background: transparent;
        }
    }

    code {
        white-space: pre-wrap; // don't collapse spaces in inline code blocks
    }
}

.mx_EventTile_lineNumbers {
    float: left;
    margin: 0 0.5em 0 -1.5em;
    color: gray;
    & span {
        text-align: right;
        display: block;
        padding-left: 1em;
    }
}

.mx_EventTile_collapsedCodeBlock {
    max-height: 30vh;
}

.mx_EventTile:hover .mx_EventTile_body pre,
.mx_EventTile.focus-visible:focus-within .mx_EventTile_body pre {
    border: 1px solid $tertiary-content;
}

.mx_EventTile_pre_container {
    // For correct positioning of _copyButton (See TextualBody)
    position: relative;
}

// Inserted adjacent to <pre> blocks, (See TextualBody)
.mx_EventTile_button {
    position: absolute;
    display: inline-block;
    visibility: hidden;
    cursor: pointer;
    top: 8px;
    right: 8px;
    width: 19px;
    height: 19px;
    background-color: $message-action-bar-fg-color;
}
.mx_EventTile_buttonBottom {
    top: 33px;
}
.mx_EventTile_copyButton {
    mask-image: url($copy-button-url);
}
.mx_EventTile_collapseButton {
    mask-size: 75%;
    mask-position: center;
    mask-repeat: no-repeat;
    mask-image: url("$(res)/img/element-icons/minimise-collapse.svg");
}
.mx_EventTile_expandButton {
    mask-size: 75%;
    mask-position: center;
    mask-repeat: no-repeat;
    mask-image: url("$(res)/img/element-icons/maximise-expand.svg");
}

.mx_EventTile_body .mx_EventTile_pre_container:focus-within .mx_EventTile_copyButton,
.mx_EventTile_body .mx_EventTile_pre_container:hover .mx_EventTile_copyButton,
.mx_EventTile_body .mx_EventTile_pre_container:focus-within .mx_EventTile_collapseButton,
.mx_EventTile_body .mx_EventTile_pre_container:hover .mx_EventTile_collapseButton,
.mx_EventTile_body .mx_EventTile_pre_container:focus-within .mx_EventTile_expandButton,
.mx_EventTile_body .mx_EventTile_pre_container:hover .mx_EventTile_expandButton {
    visibility: visible;
}

.mx_EventTile_content .markdown-body h1,
.mx_EventTile_content .markdown-body h2,
.mx_EventTile_content .markdown-body h3,
.mx_EventTile_content .markdown-body h4,
.mx_EventTile_content .markdown-body h5,
.mx_EventTile_content .markdown-body h6 {
    font-family: inherit !important;
    color: inherit;
}

/* Make h1 and h2 the same size as h3. */
.mx_EventTile_content .markdown-body h1,
.mx_EventTile_content .markdown-body h2 {
    font-size: 1.5em;
    border-bottom: none !important; // override GFM
}

.mx_EventTile_content .markdown-body a {
    color: $accent-alt;
}

.mx_EventTile_content .markdown-body blockquote {
    border-left: 2px solid $blockquote-bar-color;
    border-radius: 2px;
    padding: 0 10px;
}

/*
// actually, removing the Italic TTF provides
// better results seemingly

// compensate for Nunito italics being terrible
// https://github.com/google/fonts/issues/1726
.mx_EventTile_content .markdown-body em {
    transform: skewX(-14deg);
    display: inline-block;
}
*/

/* end of overrides */

.mx_EventTile_keyRequestInfo {
    font-size: $font-12px;
}

.mx_EventTile_keyRequestInfo_text {
    opacity: 0.5;
}

.mx_EventTile_keyRequestInfo_text .mx_AccessibleButton {
    @mixin ButtonResetDefault;
    color: $primary-content;
    text-decoration: underline;
    cursor: pointer;
}

.mx_EventTile_keyRequestInfo_tooltip_contents p {
    text-align: auto;
    margin-left: 3px;
    margin-right: 3px;
}

.mx_EventTile_keyRequestInfo_tooltip_contents p:first-child {
    margin-top: 0px;
}

.mx_EventTile_keyRequestInfo_tooltip_contents p:last-child {
    margin-bottom: 0px;
}

.mx_EventTile_tileError {
    color: red;
    text-align: center;

    // Remove some of the default tile padding so that the error is centered
    margin-right: 0;

    .mx_EventTile_line {
        padding-left: 0;
        margin-right: 0;
    }

    .mx_EventTile_line span {
        padding: 4px 8px;
    }

    a {
        margin-left: 1em;
    }
}

.mx_EventTile:hover .mx_MessageActionBar,
.mx_EventTile.mx_EventTile_actionBarFocused .mx_MessageActionBar,
[data-whatinput='keyboard'] .mx_EventTile:focus-within .mx_MessageActionBar,
.mx_EventTile.focus-visible:focus-within .mx_MessageActionBar {
    visibility: visible;
}

@media only screen and (max-width: 480px) {
    .mx_EventTile_line, .mx_EventTile_reply {
        padding-left: 0;
        margin-right: 0;
    }
    .mx_EventTile_content {
        margin-top: 10px;
        margin-right: 0;
    }
}

.mx_ThreadInfo {
    min-width: 267px;
    max-width: min(calc(100% - 64px), 600px);
    width: auto;
    height: 40px;
    position: relative;
    background-color: $system;
    padding-left: 12px;
    display: flex;
    align-items: center;
    border-radius: 8px;
    padding-right: 16px;
    margin-top: 8px;
    font-size: $font-12px;
    color: $secondary-content;
    box-sizing: border-box;
    justify-content: flex-start;
    clear: both;
    overflow: hidden;

    &:hover {
        cursor: pointer;
        border: 1px solid $quinary-content;
        padding-top: 7px;
        padding-bottom: 7px;
        padding-left: 11px;
        padding-right: 15px;
    }

    &::before {
        content: "";
        mask-image: url('$(res)/img/element-icons/thread-summary.svg');
        mask-position: center;
        height: 18px;
        min-width: 18px;
        background-color: $secondary-content;
        mask-repeat: no-repeat;
        mask-size: contain;
    }

    &::after {
        content: "›";
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        width: 60px;
        padding: 0 10px;
        font-size: 15px;
        line-height: 39px;
        box-sizing: border-box;

        text-align: right;
        font-weight: 600;

        background: linear-gradient(270deg, $system 52.6%, transparent 100%);

        opacity: 0;
        transform: translateX(20px);
        transition: all .1s ease-in-out;
    }

    &:hover::after {
        opacity: 1;
        transform: translateX(0);
    }
}

.mx_ThreadInfo_content {
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
    padding-left: 8px;
    font-size: $font-12px;
    line-height: calc(2 * $font-12px);
    color: $secondary-content;
}

.mx_ThreadInfo_avatar {
    float: left;
}

.mx_ThreadInfo_threads-amount {
    font-weight: 600;
    position: relative;
    padding: 0 8px;
    white-space: nowrap;
}

.mx_EventTile[data-shape=thread_list] {
    --topOffset: 20px;
    --leftOffset: 46px;

    margin: var(--topOffset) 16px var(--topOffset) 0;
    border-radius: 8px;

    &:hover {
        background-color: $system;
    }

    &::after {
        content: "";
        position: absolute;
        left: var(--leftOffset);
        right: 0;
        height: 1px;
        bottom: calc(-1 * var(--topOffset));
        background-color: $quinary-content;
    }

    &::before {
        content: "";
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        /* enough to cover all sibling elements */
        z-index: 10;
    }

    &:last-child {
        &::after {
            content: unset;
        }
        margin-bottom: 0;
    }

    &:first-child {
        margin-top: 0;
    }

    padding-top: 0;

    .mx_EventTile_avatar {
        top: -4px;
        left: 0;
    }

    .mx_SenderProfile {
        margin-left: var(--leftOffset) !important;
    }

    .mx_EventTile_line {
        padding-left: var(--leftOffset) !important;
        padding-bottom: 0;
    }
    .mx_MessageTimestamp {
        right: 0;
        left: auto !important;
        top: -23px;
    }
}

.mx_ThreadView {
    display: flex;
    flex-direction: column;

    .mx_EventTile_senderDetails {
        display: flex;
        align-items: center;
        gap: calc(6px + $selected-message-border-width);

        a {
            flex: 1;
            min-width: none;
            max-width: 100%;
            display: flex;
            align-items: center;

            .mx_SenderProfile {
                flex: 1;
            }
        }
    }

    .mx_ThreadView_List {
        flex: 1;
        overflow: scroll;
    }

    .mx_EventTile_roomName {
        display: none;
    }

    .mx_EventTile {
        width: 100%;
        display: flex;
        flex-direction: column;
        padding-top: 0;

        .mx_EventTile_line {
            padding-left: 0;
            order: 10 !important;
        }

        .mx_MessageTimestamp {
            left: auto;
            right: 2px !important;
            top: 1px !important;
            font-size: 1rem;
            text-align: right;
        }

        .mx_ReactionsRow {
            order: 999;
            padding-left: 0;
            padding-right: 0;
            margin-left: 36px;
            margin-right: 50px;
        }
    }

    .mx_EventTile_content,
    .mx_RedactedBody,
    .mx_ReplyChain_wrapper {
        margin-left: 36px;
        margin-right: 50px;

        .mx_EventTile_content,
        .mx_RedactedBody,
        .mx_MImageBody {
            margin: 0;
        }
    }

    .mx_EventTile_mediaLine {
        padding-left: 36px !important;
        padding-right: 50px;

        .mx_MImageBody {
            margin: 0;
            padding: 0;
        }
    }

    .mx_MessageComposer_sendMessage {
        margin-right: 0;
    }
}
